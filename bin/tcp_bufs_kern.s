
./ebpf-samples/all/tcp_bufs_kern.o:	file format elf64-bpf

Disassembly of section sockops:

0000000000000000 <bpf_bufs>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	b7 01 00 00 60 e3 16 00	r1 = 1500000
       2:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       3:	61 61 40 00 00 00 00 00	r1 = *(u32 *)(r6 + 64)
       4:	15 01 04 00 00 00 d9 31	if r1 == 836304896 goto +4 <LBB0_2>
       5:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
       7:	61 61 44 00 00 00 00 00	r1 = *(u32 *)(r6 + 68)
       8:	55 01 36 00 31 d9 00 00	if r1 != 55601 goto +54 <LBB0_11>

0000000000000048 <LBB0_2>:
       9:	61 68 00 00 00 00 00 00	r8 = *(u32 *)(r6 + 0)
      10:	b7 01 00 00 0a 00 00 00	r1 = 10
      11:	6b 1a f4 ff 00 00 00 00	*(u16 *)(r10 - 12) = r1
      12:	b7 01 00 00 67 20 25 64	r1 = 1680154727
      13:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
      14:	18 01 00 00 52 65 74 75 00 00 00 00 72 6e 69 6e	r1 = 7956011654602581330 ll
      16:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
      17:	bf a1 00 00 00 00 00 00	r1 = r10
      18:	07 01 00 00 e8 ff ff ff	r1 += -24
      19:	b7 07 00 00 00 00 00 00	r7 = 0
      20:	b7 02 00 00 0e 00 00 00	r2 = 14
      21:	b7 03 00 00 00 00 00 00	r3 = 0
      22:	85 00 00 00 06 00 00 00	call 6
      23:	65 08 05 00 03 00 00 00	if r8 s> 3 goto +5 <LBB0_5>
      24:	15 08 19 00 02 00 00 00	if r8 == 2 goto +25 <LBB0_7>
      25:	15 08 06 00 03 00 00 00	if r8 == 3 goto +6 <LBB0_8>

00000000000000d0 <LBB0_9>:
      26:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
      28:	05 00 16 00 00 00 00 00	goto +22 <LBB0_10>

00000000000000e8 <LBB0_5>:
      29:	15 08 15 00 04 00 00 00	if r8 == 4 goto +21 <LBB0_10>
      30:	15 08 01 00 05 00 00 00	if r8 == 5 goto +1 <LBB0_8>
      31:	05 00 fa ff 00 00 00 00	goto -6 <LBB0_9>

0000000000000100 <LBB0_8>:
      32:	bf a7 00 00 00 00 00 00	r7 = r10
      33:	07 07 00 00 fc ff ff ff	r7 += -4
      34:	bf 61 00 00 00 00 00 00	r1 = r6
      35:	b7 02 00 00 01 00 00 00	r2 = 1
      36:	b7 03 00 00 07 00 00 00	r3 = 7
      37:	bf 74 00 00 00 00 00 00	r4 = r7
      38:	b7 05 00 00 04 00 00 00	r5 = 4
      39:	85 00 00 00 31 00 00 00	call 49
      40:	bf 08 00 00 00 00 00 00	r8 = r0
      41:	bf 61 00 00 00 00 00 00	r1 = r6
      42:	b7 02 00 00 01 00 00 00	r2 = 1
      43:	b7 03 00 00 08 00 00 00	r3 = 8
      44:	bf 74 00 00 00 00 00 00	r4 = r7
      45:	b7 05 00 00 04 00 00 00	r5 = 4
      46:	85 00 00 00 31 00 00 00	call 49
      47:	bf 07 00 00 00 00 00 00	r7 = r0
      48:	0f 87 00 00 00 00 00 00	r7 += r8
      49:	05 00 01 00 00 00 00 00	goto +1 <LBB0_10>

0000000000000190 <LBB0_7>:
      50:	b7 07 00 00 28 00 00 00	r7 = 40

0000000000000198 <LBB0_10>:
      51:	b7 01 00 00 0a 00 00 00	r1 = 10
      52:	6b 1a f4 ff 00 00 00 00	*(u16 *)(r10 - 12) = r1
      53:	b7 01 00 00 67 20 25 64	r1 = 1680154727
      54:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
      55:	18 01 00 00 52 65 74 75 00 00 00 00 72 6e 69 6e	r1 = 7956011654602581330 ll
      57:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
      58:	bf a1 00 00 00 00 00 00	r1 = r10
      59:	07 01 00 00 e8 ff ff ff	r1 += -24
      60:	b7 02 00 00 0e 00 00 00	r2 = 14
      61:	bf 73 00 00 00 00 00 00	r3 = r7
      62:	85 00 00 00 06 00 00 00	call 6

00000000000001f8 <LBB0_11>:
      63:	63 76 04 00 00 00 00 00	*(u32 *)(r6 + 4) = r7
      64:	b7 00 00 00 01 00 00 00	r0 = 1
      65:	95 00 00 00 00 00 00 00	exit
