
./ebpf-samples/all/byteswap.o:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <func>:
       0:	85 00 00 00 07 00 00 00	call 7
       1:	bf 01 00 00 00 00 00 00	r1 = r0
       2:	57 01 00 00 01 00 00 00	r1 &= 1
       3:	15 01 03 00 00 00 00 00	if r1 == 0 goto +3 <LBB0_2>
       4:	d4 00 00 00 40 00 00 00	r0 = le64 r0
       5:	95 00 00 00 00 00 00 00	exit
       6:	05 00 19 00 00 00 00 00	goto +25 <LBB0_11>

0000000000000038 <LBB0_2>:
       7:	bf 01 00 00 00 00 00 00	r1 = r0
       8:	57 01 00 00 02 00 00 00	r1 &= 2
       9:	15 01 03 00 00 00 00 00	if r1 == 0 goto +3 <LBB0_4>
      10:	d4 00 00 00 20 00 00 00	r0 = le32 r0
      11:	95 00 00 00 00 00 00 00	exit
      12:	05 00 13 00 00 00 00 00	goto +19 <LBB0_11>

0000000000000068 <LBB0_4>:
      13:	bf 01 00 00 00 00 00 00	r1 = r0
      14:	57 01 00 00 04 00 00 00	r1 &= 4
      15:	15 01 03 00 00 00 00 00	if r1 == 0 goto +3 <LBB0_6>
      16:	d4 00 00 00 10 00 00 00	r0 = le16 r0
      17:	95 00 00 00 00 00 00 00	exit
      18:	05 00 0d 00 00 00 00 00	goto +13 <LBB0_11>

0000000000000098 <LBB0_6>:
      19:	bf 01 00 00 00 00 00 00	r1 = r0
      20:	57 01 00 00 10 00 00 00	r1 &= 16
      21:	15 01 03 00 00 00 00 00	if r1 == 0 goto +3 <LBB0_8>
      22:	dc 00 00 00 40 00 00 00	r0 = be64 r0
      23:	95 00 00 00 00 00 00 00	exit
      24:	05 00 07 00 00 00 00 00	goto +7 <LBB0_11>

00000000000000c8 <LBB0_8>:
      25:	57 00 00 00 20 00 00 00	r0 &= 32
      26:	15 00 03 00 00 00 00 00	if r0 == 0 goto +3 <LBB0_10>
      27:	dc 00 00 00 20 00 00 00	r0 = be32 r0
      28:	95 00 00 00 00 00 00 00	exit
      29:	05 00 02 00 00 00 00 00	goto +2 <LBB0_11>

00000000000000f0 <LBB0_10>:
      30:	dc 00 00 00 10 00 00 00	r0 = be16 r0
      31:	95 00 00 00 00 00 00 00	exit

0000000000000100 <LBB0_11>:
      32:	b7 00 00 00 00 00 00 00	r0 = 0
      33:	95 00 00 00 00 00 00 00	exit
