
./ebpf-samples/all/spintest_kern.o:	file format elf64-bpf

Disassembly of section kprobe/spin_unlock:

0000000000000000 <p1>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/spin_lock:

0000000000000000 <p2>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/mutex_spin_on_owner:

0000000000000000 <p3>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/rwsem_spin_on_owner:

0000000000000000 <p4>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/spin_unlock_irqrestore:

0000000000000000 <p5>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_unlock_irqrestore:

0000000000000000 <p6>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_unlock_bh:

0000000000000000 <p7>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_unlock:

0000000000000000 <p8>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_lock_irqsave:

0000000000000000 <p9>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_trylock_bh:

0000000000000000 <p10>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_lock_irq:

0000000000000000 <p11>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_trylock:

0000000000000000 <p12>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_lock:

0000000000000000 <p13>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/_raw_spin_lock_bh:

0000000000000000 <p14>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/htab_map_update_elem:

0000000000000000 <p15>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/__htab_percpu_map_update_elem:

0000000000000000 <p16>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/htab_map_alloc:

0000000000000000 <p17>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	79 61 80 00 00 00 00 00	r1 = *(u64 *)(r6 + 128)
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	bf a7 00 00 00 00 00 00	r7 = r10
       4:	07 07 00 00 f8 ff ff ff	r7 += -8
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	bf 72 00 00 00 00 00 00	r2 = r7
       8:	85 00 00 00 01 00 00 00	call 1
       9:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      11:	bf 72 00 00 00 00 00 00	r2 = r7
      12:	bf 73 00 00 00 00 00 00	r3 = r7
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	b7 04 00 00 00 00 00 00	r4 = 0
      20:	85 00 00 00 02 00 00 00	call 2
      21:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      23:	bf 72 00 00 00 00 00 00	r2 = r7
      24:	85 00 00 00 03 00 00 00	call 3
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      28:	b7 03 00 00 00 04 00 00	r3 = 1024
      29:	85 00 00 00 1b 00 00 00	call 27
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	95 00 00 00 00 00 00 00	exit
