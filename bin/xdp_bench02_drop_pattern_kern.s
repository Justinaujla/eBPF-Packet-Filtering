
./ebpf-samples/all/xdp_bench02_drop_pattern_kern.o:	file format elf64-bpf

Disassembly of section xdp_bench02:

0000000000000000 <xdp_prog>:
       0:	bf 18 00 00 00 00 00 00	r8 = r1
       1:	61 87 04 00 00 00 00 00	r7 = *(u32 *)(r8 + 4)
       2:	61 89 00 00 00 00 00 00	r9 = *(u32 *)(r8 + 0)
       3:	b7 01 00 00 00 00 00 00	r1 = 0
       4:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
       5:	b7 06 00 00 01 00 00 00	r6 = 1
       6:	bf 91 00 00 00 00 00 00	r1 = r9
       7:	07 01 00 00 0e 00 00 00	r1 += 14
       8:	2d 71 73 00 00 00 00 00	if r1 > r7 goto +115 <LBB0_30>
       9:	bf a2 00 00 00 00 00 00	r2 = r10
      10:	07 02 00 00 f8 ff ff ff	r2 += -8
      11:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      13:	85 00 00 00 01 00 00 00	call 1
      14:	b7 06 00 00 00 00 00 00	r6 = 0
      15:	15 00 6c 00 00 00 00 00	if r0 == 0 goto +108 <LBB0_30>
      16:	7b 0a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r0
      17:	bf a2 00 00 00 00 00 00	r2 = r10
      18:	07 02 00 00 f8 ff ff ff	r2 += -8
      19:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      21:	85 00 00 00 01 00 00 00	call 1
      22:	15 00 26 00 00 00 00 00	if r0 == 0 goto +38 <LBB0_13>
      23:	79 01 00 00 00 00 00 00	r1 = *(u64 *)(r0 + 0)
      24:	55 01 24 00 01 00 00 00	if r1 != 1 goto +36 <LBB0_13>
      25:	b7 06 00 00 02 00 00 00	r6 = 2
      26:	bf 91 00 00 00 00 00 00	r1 = r9
      27:	07 01 00 00 0e 00 00 00	r1 += 14
      28:	2d 71 5f 00 00 00 00 00	if r1 > r7 goto +95 <LBB0_30>
      29:	71 92 0c 00 00 00 00 00	r2 = *(u8 *)(r9 + 12)
      30:	71 91 0d 00 00 00 00 00	r1 = *(u8 *)(r9 + 13)
      31:	67 01 00 00 08 00 00 00	r1 <<= 8
      32:	4f 21 00 00 00 00 00 00	r1 |= r2
      33:	bf 12 00 00 00 00 00 00	r2 = r1
      34:	57 02 00 00 ff 00 00 00	r2 &= 255
      35:	b7 03 00 00 06 00 00 00	r3 = 6
      36:	2d 23 57 00 00 00 00 00	if r3 > r2 goto +87 <LBB0_30>
      37:	15 01 02 00 88 a8 00 00	if r1 == 43144 goto +2 <LBB0_8>
      38:	b7 02 00 00 0e 00 00 00	r2 = 14
      39:	55 01 05 00 81 00 00 00	if r1 != 129 goto +5 <LBB0_10>

0000000000000140 <LBB0_8>:
      40:	bf 91 00 00 00 00 00 00	r1 = r9
      41:	07 01 00 00 12 00 00 00	r1 += 18
      42:	2d 71 51 00 00 00 00 00	if r1 > r7 goto +81 <LBB0_30>
      43:	b7 02 00 00 12 00 00 00	r2 = 18
      44:	69 91 10 00 00 00 00 00	r1 = *(u16 *)(r9 + 16)

0000000000000168 <LBB0_10>:
      45:	57 01 00 00 ff ff 00 00	r1 &= 65535
      46:	55 01 0e 00 08 00 00 00	if r1 != 8 goto +14 <LBB0_13>
      47:	61 81 00 00 00 00 00 00	r1 = *(u32 *)(r8 + 0)
      48:	0f 21 00 00 00 00 00 00	r1 += r2
      49:	bf 12 00 00 00 00 00 00	r2 = r1
      50:	07 02 00 00 14 00 00 00	r2 += 20
      51:	61 83 04 00 00 00 00 00	r3 = *(u32 *)(r8 + 4)
      52:	2d 32 08 00 00 00 00 00	if r2 > r3 goto +8 <LBB0_13>
      53:	61 11 0c 00 00 00 00 00	r1 = *(u32 *)(r1 + 12)
      54:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
      55:	bf a2 00 00 00 00 00 00	r2 = r10
      56:	07 02 00 00 fc ff ff ff	r2 += -4
      57:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      59:	85 00 00 00 01 00 00 00	call 1
      60:	55 00 41 00 00 00 00 00	if r0 != 0 goto +65 <LBB0_31>

00000000000001e8 <LBB0_13>:
      61:	bf a2 00 00 00 00 00 00	r2 = r10
      62:	07 02 00 00 f8 ff ff ff	r2 += -8
      63:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      65:	85 00 00 00 01 00 00 00	call 1
      66:	15 00 03 00 00 00 00 00	if r0 == 0 goto +3 <LBB0_15>
      67:	79 01 00 00 00 00 00 00	r1 = *(u64 *)(r0 + 0)
      68:	07 01 00 00 01 00 00 00	r1 += 1
      69:	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r1

0000000000000230 <LBB0_15>:
      70:	b7 06 00 00 01 00 00 00	r6 = 1
      71:	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 16)
      72:	61 21 00 00 00 00 00 00	r1 = *(u32 *)(r2 + 0)
      73:	55 01 19 00 01 00 00 00	if r1 != 1 goto +25 <LBB0_24>
      74:	61 27 04 00 00 00 00 00	r7 = *(u32 *)(r2 + 4)
      75:	b7 08 00 00 00 00 00 00	r8 = 0
      76:	63 8a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r8
      77:	bf a2 00 00 00 00 00 00	r2 = r10
      78:	07 02 00 00 fc ff ff ff	r2 += -4
      79:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      81:	85 00 00 00 01 00 00 00	call 1
      82:	15 00 08 00 00 00 00 00	if r0 == 0 goto +8 <LBB0_20>
      83:	bf 72 00 00 00 00 00 00	r2 = r7
      84:	67 02 00 00 01 00 00 00	r2 <<= 1
      85:	79 08 00 00 00 00 00 00	r8 = *(u64 *)(r0 + 0)
      86:	bf 81 00 00 00 00 00 00	r1 = r8
      87:	07 01 00 00 01 00 00 00	r1 += 1
      88:	2d 12 01 00 00 00 00 00	if r2 > r1 goto +1 <LBB0_19>
      89:	b7 01 00 00 00 00 00 00	r1 = 0

00000000000002d0 <LBB0_19>:
      90:	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r1

00000000000002d8 <LBB0_20>:
      91:	b7 06 00 00 02 00 00 00	r6 = 2
      92:	15 07 06 00 00 00 00 00	if r7 == 0 goto +6 <LBB0_24>
      93:	b7 06 00 00 01 00 00 00	r6 = 1
      94:	2d 87 04 00 00 00 00 00	if r7 > r8 goto +4 <LBB0_24>
      95:	67 07 00 00 01 00 00 00	r7 <<= 1
      96:	b7 06 00 00 02 00 00 00	r6 = 2
      97:	2d 87 01 00 00 00 00 00	if r7 > r8 goto +1 <LBB0_24>
      98:	b7 06 00 00 03 00 00 00	r6 = 3

0000000000000318 <LBB0_24>:
      99:	bf a2 00 00 00 00 00 00	r2 = r10
     100:	07 02 00 00 f8 ff ff ff	r2 += -8
     101:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     103:	85 00 00 00 01 00 00 00	call 1
     104:	15 00 09 00 00 00 00 00	if r0 == 0 goto +9 <LBB0_28>
     105:	61 01 00 00 00 00 00 00	r1 = *(u32 *)(r0 + 0)
     106:	bf 12 00 00 00 00 00 00	r2 = r1
     107:	07 02 00 00 ff ff ff ff	r2 += -1
     108:	67 02 00 00 20 00 00 00	r2 <<= 32
     109:	77 02 00 00 20 00 00 00	r2 >>= 32
     110:	b7 03 00 00 03 00 00 00	r3 = 3
     111:	2d 23 01 00 00 00 00 00	if r3 > r2 goto +1 <LBB0_27>
     112:	bf 61 00 00 00 00 00 00	r1 = r6

0000000000000388 <LBB0_27>:
     113:	bf 16 00 00 00 00 00 00	r6 = r1

0000000000000390 <LBB0_28>:
     114:	63 6a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r6
     115:	bf a2 00 00 00 00 00 00	r2 = r10
     116:	07 02 00 00 fc ff ff ff	r2 += -4
     117:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     119:	85 00 00 00 01 00 00 00	call 1
     120:	15 00 03 00 00 00 00 00	if r0 == 0 goto +3 <LBB0_30>
     121:	79 01 00 00 00 00 00 00	r1 = *(u64 *)(r0 + 0)
     122:	07 01 00 00 01 00 00 00	r1 += 1
     123:	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r1

00000000000003e0 <LBB0_30>:
     124:	bf 60 00 00 00 00 00 00	r0 = r6
     125:	95 00 00 00 00 00 00 00	exit

00000000000003f0 <LBB0_31>:
     126:	79 01 00 00 00 00 00 00	r1 = *(u64 *)(r0 + 0)
     127:	07 01 00 00 01 00 00 00	r1 += 1
     128:	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r1
     129:	b7 06 00 00 01 00 00 00	r6 = 1
     130:	05 00 ef ff 00 00 00 00	goto -17 <LBB0_28>
