
./ebpf-samples/all/loop.o:	file format elf64-bpf

Disassembly of section test_md:

0000000000000000 <foo>:
       0:	b7 02 00 00 00 00 00 00	r2 = 0
       1:	7b 2a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r2
       2:	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r2
       3:	7b 2a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r2
       4:	7b 2a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r2
       5:	7b 2a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r2
       6:	79 13 08 00 00 00 00 00	r3 = *(u64 *)(r1 + 8)
       7:	79 11 00 00 00 00 00 00	r1 = *(u64 *)(r1 + 0)
       8:	b7 04 00 00 01 00 00 00	r4 = 1

0000000000000048 <LBB0_1>:
       9:	bf 15 00 00 00 00 00 00	r5 = r1
      10:	0f 25 00 00 00 00 00 00	r5 += r2
      11:	3d 35 06 00 00 00 00 00	if r5 >= r3 goto +6 <LBB0_3>
      12:	bf a5 00 00 00 00 00 00	r5 = r10
      13:	07 05 00 00 d8 ff ff ff	r5 += -40
      14:	0f 25 00 00 00 00 00 00	r5 += r2
      15:	73 45 00 00 00 00 00 00	*(u8 *)(r5 + 0) = r4
      16:	07 02 00 00 01 00 00 00	r2 += 1
      17:	55 02 f7 ff 28 00 00 00	if r2 != 40 goto -9 <LBB0_1>

0000000000000090 <LBB0_3>:
      18:	b7 01 00 00 00 00 00 00	r1 = 0
      19:	b7 00 00 00 00 00 00 00	r0 = 0

00000000000000a0 <LBB0_4>:
      20:	bf a2 00 00 00 00 00 00	r2 = r10
      21:	07 02 00 00 d8 ff ff ff	r2 += -40
      22:	0f 12 00 00 00 00 00 00	r2 += r1
      23:	71 22 00 00 00 00 00 00	r2 = *(u8 *)(r2 + 0)
      24:	0f 20 00 00 00 00 00 00	r0 += r2
      25:	07 01 00 00 01 00 00 00	r1 += 1
      26:	55 01 f9 ff 28 00 00 00	if r1 != 40 goto -7 <LBB0_4>
      27:	95 00 00 00 00 00 00 00	exit
