
./ebpf-samples/all/sockex3_kern.o:	file format elf64-bpf

Disassembly of section socket/3:

0000000000000000 <bpf_func_PARSE_IP>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	85 00 00 00 08 00 00 00	call 8
       2:	63 0a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r0
       3:	bf a2 00 00 00 00 00 00	r2 = r10
       4:	07 02 00 00 f0 ff ff ff	r2 += -16
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	85 00 00 00 01 00 00 00	call 1
       8:	bf 09 00 00 00 00 00 00	r9 = r0
       9:	15 09 90 00 00 00 00 00	if r9 == 0 goto +144 <LBB0_29>
      10:	61 68 30 00 00 00 00 00	r8 = *(u32 *)(r6 + 48)
      11:	bf 87 00 00 00 00 00 00	r7 = r8
      12:	07 07 00 00 06 00 00 00	r7 += 6
      13:	48 70 00 00 00 00 00 00	r0 = *(u16 *)skb[r7]
      14:	57 00 00 00 ff 3f 00 00	r0 &= 16383
      15:	55 00 8a 00 00 00 00 00	if r0 != 0 goto +138 <LBB0_29>
      16:	bf 87 00 00 00 00 00 00	r7 = r8
      17:	07 07 00 00 09 00 00 00	r7 += 9
      18:	50 70 00 00 00 00 00 00	r0 = *(u8 *)skb[r7]
      19:	bf 07 00 00 00 00 00 00	r7 = r0
      20:	67 07 00 00 20 00 00 00	r7 <<= 32
      21:	77 07 00 00 20 00 00 00	r7 >>= 32
      22:	55 07 26 00 2f 00 00 00	if r7 != 47 goto +38 <LBB0_12>
      23:	50 80 00 00 00 00 00 00	r0 = *(u8 *)skb[r8]
      24:	bf 07 00 00 00 00 00 00	r7 = r0
      25:	67 07 00 00 02 00 00 00	r7 <<= 2
      26:	57 07 00 00 3c 00 00 00	r7 &= 60
      27:	0f 87 00 00 00 00 00 00	r7 += r8
      28:	63 76 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r7
      29:	bf 78 00 00 00 00 00 00	r8 = r7
      30:	67 08 00 00 20 00 00 00	r8 <<= 32
      31:	77 08 00 00 20 00 00 00	r8 >>= 32
      32:	48 80 00 00 00 00 00 00	r0 = *(u16 *)skb[r8]
      33:	bf 01 00 00 00 00 00 00	r1 = r0
      34:	57 01 00 00 40 07 00 00	r1 &= 1856
      35:	15 01 01 00 00 00 00 00	if r1 == 0 goto +1 <LBB0_4>
      36:	05 00 75 00 00 00 00 00	goto +117 <LBB0_29>

0000000000000128 <LBB0_4>:
      37:	bf 01 00 00 00 00 00 00	r1 = r0
      38:	77 01 00 00 05 00 00 00	r1 >>= 5
      39:	57 01 00 00 04 00 00 00	r1 &= 4
      40:	0f 17 00 00 00 00 00 00	r7 += r1
      41:	bf 79 00 00 00 00 00 00	r9 = r7
      42:	07 09 00 00 04 00 00 00	r9 += 4
      43:	bf 01 00 00 00 00 00 00	r1 = r0
      44:	57 01 00 00 20 00 00 00	r1 &= 32
      45:	15 01 02 00 00 00 00 00	if r1 == 0 goto +2 <LBB0_6>
      46:	07 07 00 00 08 00 00 00	r7 += 8
      47:	bf 79 00 00 00 00 00 00	r9 = r7

0000000000000180 <LBB0_6>:
      48:	57 00 00 00 10 00 00 00	r0 &= 16
      49:	15 00 01 00 00 00 00 00	if r0 == 0 goto +1 <LBB0_8>
      50:	07 09 00 00 04 00 00 00	r9 += 4

0000000000000198 <LBB0_8>:
      51:	07 08 00 00 02 00 00 00	r8 += 2
      52:	48 80 00 00 00 00 00 00	r0 = *(u16 *)skb[r8]
      53:	63 96 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r9
      54:	67 00 00 00 20 00 00 00	r0 <<= 32
      55:	77 00 00 00 20 00 00 00	r0 >>= 32
      56:	65 00 45 00 46 88 00 00	if r0 s> 34886 goto +69 <LBB0_23>
      57:	15 00 1a 00 00 08 00 00	if r0 == 2048 goto +26 <LBB0_15>
      58:	15 00 48 00 00 81 00 00	if r0 == 33024 goto +72 <LBB0_25>
      59:	15 00 21 00 dd 86 00 00	if r0 == 34525 goto +33 <LBB0_19>
      60:	05 00 5d 00 00 00 00 00	goto +93 <LBB0_29>

00000000000001e8 <LBB0_12>:
      61:	7b 0a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r0
      62:	7b 9a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r9
      63:	bf 89 00 00 00 00 00 00	r9 = r8
      64:	07 09 00 00 0c 00 00 00	r9 += 12
      65:	40 90 00 00 00 00 00 00	r0 = *(u32 *)skb[r9]
      66:	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 40)
      67:	63 01 00 00 00 00 00 00	*(u32 *)(r1 + 0) = r0
      68:	bf 89 00 00 00 00 00 00	r9 = r8
      69:	07 09 00 00 10 00 00 00	r9 += 16
      70:	40 90 00 00 00 00 00 00	r0 = *(u32 *)skb[r9]
      71:	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 40)
      72:	63 01 04 00 00 00 00 00	*(u32 *)(r1 + 4) = r0
      73:	50 80 00 00 00 00 00 00	r0 = *(u8 *)skb[r8]
      74:	bf 09 00 00 00 00 00 00	r9 = r0
      75:	67 09 00 00 02 00 00 00	r9 <<= 2
      76:	57 09 00 00 3c 00 00 00	r9 &= 60
      77:	0f 89 00 00 00 00 00 00	r9 += r8
      78:	63 96 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r9
      79:	65 07 09 00 05 00 00 00	if r7 s> 5 goto +9 <LBB0_16>
      80:	79 a3 d8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 40)
      81:	15 07 15 00 01 00 00 00	if r7 == 1 goto +21 <LBB0_21>
      82:	15 07 01 00 04 00 00 00	if r7 == 4 goto +1 <LBB0_15>
      83:	05 00 46 00 00 00 00 00	goto +70 <LBB0_29>

00000000000002a0 <LBB0_15>:
      84:	bf 61 00 00 00 00 00 00	r1 = r6
      85:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      87:	b7 03 00 00 03 00 00 00	r3 = 3
      88:	05 00 40 00 00 00 00 00	goto +64 <LBB0_28>

00000000000002c8 <LBB0_16>:
      89:	15 07 08 00 06 00 00 00	if r7 == 6 goto +8 <LBB0_20>
      90:	15 07 07 00 11 00 00 00	if r7 == 17 goto +7 <LBB0_20>
      91:	15 07 01 00 29 00 00 00	if r7 == 41 goto +1 <LBB0_19>
      92:	05 00 3d 00 00 00 00 00	goto +61 <LBB0_29>

00000000000002e8 <LBB0_19>:
      93:	bf 61 00 00 00 00 00 00	r1 = r6
      94:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      96:	b7 03 00 00 04 00 00 00	r3 = 4
      97:	05 00 37 00 00 00 00 00	goto +55 <LBB0_28>

0000000000000310 <LBB0_20>:
      98:	67 09 00 00 20 00 00 00	r9 <<= 32
      99:	77 09 00 00 20 00 00 00	r9 >>= 32
     100:	40 90 00 00 00 00 00 00	r0 = *(u32 *)skb[r9]
     101:	79 a3 d8 ff 00 00 00 00	r3 = *(u64 *)(r10 - 40)
     102:	63 03 08 00 00 00 00 00	*(u32 *)(r3 + 8) = r0

0000000000000338 <LBB0_21>:
     103:	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 48)
     104:	63 13 0c 00 00 00 00 00	*(u32 *)(r3 + 12) = r1
     105:	61 31 0c 00 00 00 00 00	r1 = *(u32 *)(r3 + 12)
     106:	67 01 00 00 20 00 00 00	r1 <<= 32
     107:	61 32 08 00 00 00 00 00	r2 = *(u32 *)(r3 + 8)
     108:	4f 21 00 00 00 00 00 00	r1 |= r2
     109:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
     110:	61 31 00 00 00 00 00 00	r1 = *(u32 *)(r3 + 0)
     111:	61 32 04 00 00 00 00 00	r2 = *(u32 *)(r3 + 4)
     112:	67 02 00 00 20 00 00 00	r2 <<= 32
     113:	4f 12 00 00 00 00 00 00	r2 |= r1
     114:	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r2
     115:	bf a2 00 00 00 00 00 00	r2 = r10
     116:	07 02 00 00 f0 ff ff ff	r2 += -16
     117:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     119:	85 00 00 00 01 00 00 00	call 1
     120:	15 00 0f 00 00 00 00 00	if r0 == 0 goto +15 <LBB0_26>
     121:	b7 01 00 00 01 00 00 00	r1 = 1
     122:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1
     123:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
     124:	db 10 08 00 00 00 00 00	lock *(u64 *)(r0 + 8) += r1
     125:	05 00 1c 00 00 00 00 00	goto +28 <LBB0_29>

00000000000003f0 <LBB0_23>:
     126:	bf 01 00 00 00 00 00 00	r1 = r0
     127:	07 01 00 00 b9 77 ff ff	r1 += -34887
     128:	b7 02 00 00 02 00 00 00	r2 = 2
     129:	2d 12 13 00 00 00 00 00	if r2 > r1 goto +19 <LBB0_27>
     130:	55 00 17 00 a8 88 00 00	if r0 != 34984 goto +23 <LBB0_29>

0000000000000418 <LBB0_25>:
     131:	bf 61 00 00 00 00 00 00	r1 = r6
     132:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
     134:	b7 03 00 00 01 00 00 00	r3 = 1
     135:	05 00 11 00 00 00 00 00	goto +17 <LBB0_28>

0000000000000440 <LBB0_26>:
     136:	b7 01 00 00 01 00 00 00	r1 = 1
     137:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
     138:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
     139:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
     140:	bf a2 00 00 00 00 00 00	r2 = r10
     141:	07 02 00 00 f0 ff ff ff	r2 += -16
     142:	bf a3 00 00 00 00 00 00	r3 = r10
     143:	07 03 00 00 e0 ff ff ff	r3 += -32
     144:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     146:	b7 04 00 00 00 00 00 00	r4 = 0
     147:	85 00 00 00 02 00 00 00	call 2
     148:	05 00 05 00 00 00 00 00	goto +5 <LBB0_29>

00000000000004a8 <LBB0_27>:
     149:	bf 61 00 00 00 00 00 00	r1 = r6
     150:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
     152:	b7 03 00 00 02 00 00 00	r3 = 2

00000000000004c8 <LBB0_28>:
     153:	85 00 00 00 0c 00 00 00	call 12

00000000000004d0 <LBB0_29>:
     154:	b7 00 00 00 00 00 00 00	r0 = 0
     155:	95 00 00 00 00 00 00 00	exit

Disassembly of section socket/4:

0000000000000000 <bpf_func_PARSE_IPV6>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	85 00 00 00 08 00 00 00	call 8
       2:	63 0a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r0
       3:	bf a2 00 00 00 00 00 00	r2 = r10
       4:	07 02 00 00 f0 ff ff ff	r2 += -16
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	85 00 00 00 01 00 00 00	call 1
       8:	bf 07 00 00 00 00 00 00	r7 = r0
       9:	15 07 92 00 00 00 00 00	if r7 == 0 goto +146 <LBB1_24>
      10:	61 69 30 00 00 00 00 00	r9 = *(u32 *)(r6 + 48)
      11:	bf 98 00 00 00 00 00 00	r8 = r9
      12:	07 08 00 00 06 00 00 00	r8 += 6
      13:	50 80 00 00 00 00 00 00	r0 = *(u8 *)skb[r8]
      14:	7b 0a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r0
      15:	bf 98 00 00 00 00 00 00	r8 = r9
      16:	07 08 00 00 14 00 00 00	r8 += 20
      17:	40 80 00 00 00 00 00 00	r0 = *(u32 *)skb[r8]
      18:	7b 0a c8 ff 00 00 00 00	*(u64 *)(r10 - 56) = r0
      19:	bf 98 00 00 00 00 00 00	r8 = r9
      20:	07 08 00 00 10 00 00 00	r8 += 16
      21:	40 80 00 00 00 00 00 00	r0 = *(u32 *)skb[r8]
      22:	7b 0a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r0
      23:	bf 98 00 00 00 00 00 00	r8 = r9
      24:	07 09 00 00 08 00 00 00	r9 += 8
      25:	40 90 00 00 00 00 00 00	r0 = *(u32 *)skb[r9]
      26:	bf 09 00 00 00 00 00 00	r9 = r0
      27:	7b 7a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r7
      28:	bf 87 00 00 00 00 00 00	r7 = r8
      29:	07 07 00 00 0c 00 00 00	r7 += 12
      30:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
      31:	af 90 00 00 00 00 00 00	r0 ^= r9
      32:	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 64)
      33:	af 10 00 00 00 00 00 00	r0 ^= r1
      34:	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 56)
      35:	af 10 00 00 00 00 00 00	r0 ^= r1
      36:	79 a1 d8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 40)
      37:	63 01 00 00 00 00 00 00	*(u32 *)(r1 + 0) = r0
      38:	bf 87 00 00 00 00 00 00	r7 = r8
      39:	07 07 00 00 24 00 00 00	r7 += 36
      40:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
      41:	7b 0a c8 ff 00 00 00 00	*(u64 *)(r10 - 56) = r0
      42:	bf 87 00 00 00 00 00 00	r7 = r8
      43:	07 07 00 00 20 00 00 00	r7 += 32
      44:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
      45:	7b 0a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r0
      46:	bf 87 00 00 00 00 00 00	r7 = r8
      47:	07 07 00 00 18 00 00 00	r7 += 24
      48:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
      49:	bf 09 00 00 00 00 00 00	r9 = r0
      50:	bf 87 00 00 00 00 00 00	r7 = r8
      51:	07 07 00 00 1c 00 00 00	r7 += 28
      52:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
      53:	bf 82 00 00 00 00 00 00	r2 = r8
      54:	79 a7 d8 ff 00 00 00 00	r7 = *(u64 *)(r10 - 40)
      55:	af 90 00 00 00 00 00 00	r0 ^= r9
      56:	79 a1 c0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 64)
      57:	af 10 00 00 00 00 00 00	r0 ^= r1
      58:	79 a1 c8 ff 00 00 00 00	r1 = *(u64 *)(r10 - 56)
      59:	af 10 00 00 00 00 00 00	r0 ^= r1
      60:	63 07 04 00 00 00 00 00	*(u32 *)(r7 + 4) = r0
      61:	07 08 00 00 28 00 00 00	r8 += 40
      62:	63 86 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r8
      63:	79 a1 d0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 48)
      64:	bf 19 00 00 00 00 00 00	r9 = r1
      65:	67 01 00 00 20 00 00 00	r1 <<= 32
      66:	77 01 00 00 20 00 00 00	r1 >>= 32
      67:	65 01 04 00 10 00 00 00	if r1 s> 16 goto +4 <LBB1_5>
      68:	15 01 2f 00 01 00 00 00	if r1 == 1 goto +47 <LBB1_19>
      69:	15 01 51 00 04 00 00 00	if r1 == 4 goto +81 <LBB1_22>
      70:	15 01 29 00 06 00 00 00	if r1 == 6 goto +41 <LBB1_18>
      71:	05 00 54 00 00 00 00 00	goto +84 <LBB1_24>

0000000000000240 <LBB1_5>:
      72:	7b 2a c8 ff 00 00 00 00	*(u64 *)(r10 - 56) = r2
      73:	15 01 26 00 11 00 00 00	if r1 == 17 goto +38 <LBB1_18>
      74:	15 01 20 00 29 00 00 00	if r1 == 41 goto +32 <LBB1_17>
      75:	55 01 50 00 2f 00 00 00	if r1 != 47 goto +80 <LBB1_24>
      76:	67 08 00 00 20 00 00 00	r8 <<= 32
      77:	77 08 00 00 20 00 00 00	r8 >>= 32
      78:	48 80 00 00 00 00 00 00	r0 = *(u16 *)skb[r8]
      79:	bf 01 00 00 00 00 00 00	r1 = r0
      80:	57 01 00 00 40 07 00 00	r1 &= 1856
      81:	55 01 4a 00 00 00 00 00	if r1 != 0 goto +74 <LBB1_24>
      82:	bf 01 00 00 00 00 00 00	r1 = r0
      83:	77 01 00 00 05 00 00 00	r1 >>= 5
      84:	57 01 00 00 04 00 00 00	r1 &= 4
      85:	79 a2 c8 ff 00 00 00 00	r2 = *(u64 *)(r10 - 56)
      86:	0f 12 00 00 00 00 00 00	r2 += r1
      87:	bf 29 00 00 00 00 00 00	r9 = r2
      88:	07 09 00 00 2c 00 00 00	r9 += 44
      89:	bf 01 00 00 00 00 00 00	r1 = r0
      90:	57 01 00 00 20 00 00 00	r1 &= 32
      91:	15 01 02 00 00 00 00 00	if r1 == 0 goto +2 <LBB1_11>
      92:	07 02 00 00 30 00 00 00	r2 += 48
      93:	bf 29 00 00 00 00 00 00	r9 = r2

00000000000002f0 <LBB1_11>:
      94:	57 00 00 00 10 00 00 00	r0 &= 16
      95:	15 00 01 00 00 00 00 00	if r0 == 0 goto +1 <LBB1_13>
      96:	07 09 00 00 04 00 00 00	r9 += 4

0000000000000308 <LBB1_13>:
      97:	07 08 00 00 02 00 00 00	r8 += 2
      98:	48 80 00 00 00 00 00 00	r0 = *(u16 *)skb[r8]
      99:	63 96 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r9
     100:	67 00 00 00 20 00 00 00	r0 <<= 32
     101:	77 00 00 00 20 00 00 00	r0 >>= 32
     102:	65 00 37 00 46 88 00 00	if r0 s> 34886 goto +55 <LBB1_25>
     103:	15 00 2f 00 00 08 00 00	if r0 == 2048 goto +47 <LBB1_22>
     104:	15 00 3a 00 00 81 00 00	if r0 == 33024 goto +58 <LBB1_27>
     105:	15 00 01 00 dd 86 00 00	if r0 == 34525 goto +1 <LBB1_17>
     106:	05 00 31 00 00 00 00 00	goto +49 <LBB1_24>

0000000000000358 <LBB1_17>:
     107:	bf 61 00 00 00 00 00 00	r1 = r6
     108:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
     110:	b7 03 00 00 04 00 00 00	r3 = 4
     111:	05 00 2b 00 00 00 00 00	goto +43 <LBB1_23>

0000000000000380 <LBB1_18>:
     112:	67 08 00 00 20 00 00 00	r8 <<= 32
     113:	77 08 00 00 20 00 00 00	r8 >>= 32
     114:	40 80 00 00 00 00 00 00	r0 = *(u32 *)skb[r8]
     115:	63 07 08 00 00 00 00 00	*(u32 *)(r7 + 8) = r0

00000000000003a0 <LBB1_19>:
     116:	63 97 0c 00 00 00 00 00	*(u32 *)(r7 + 12) = r9
     117:	61 71 0c 00 00 00 00 00	r1 = *(u32 *)(r7 + 12)
     118:	67 01 00 00 20 00 00 00	r1 <<= 32
     119:	61 72 08 00 00 00 00 00	r2 = *(u32 *)(r7 + 8)
     120:	4f 21 00 00 00 00 00 00	r1 |= r2
     121:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
     122:	61 71 00 00 00 00 00 00	r1 = *(u32 *)(r7 + 0)
     123:	61 72 04 00 00 00 00 00	r2 = *(u32 *)(r7 + 4)
     124:	67 02 00 00 20 00 00 00	r2 <<= 32
     125:	4f 12 00 00 00 00 00 00	r2 |= r1
     126:	7b 2a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r2
     127:	bf a2 00 00 00 00 00 00	r2 = r10
     128:	07 02 00 00 f0 ff ff ff	r2 += -16
     129:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     131:	85 00 00 00 01 00 00 00	call 1
     132:	15 00 05 00 00 00 00 00	if r0 == 0 goto +5 <LBB1_21>
     133:	b7 01 00 00 01 00 00 00	r1 = 1
     134:	db 10 00 00 00 00 00 00	lock *(u64 *)(r0 + 0) += r1
     135:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
     136:	db 10 08 00 00 00 00 00	lock *(u64 *)(r0 + 8) += r1
     137:	05 00 12 00 00 00 00 00	goto +18 <LBB1_24>

0000000000000450 <LBB1_21>:
     138:	b7 01 00 00 01 00 00 00	r1 = 1
     139:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
     140:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
     141:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
     142:	bf a2 00 00 00 00 00 00	r2 = r10
     143:	07 02 00 00 f0 ff ff ff	r2 += -16
     144:	bf a3 00 00 00 00 00 00	r3 = r10
     145:	07 03 00 00 e0 ff ff ff	r3 += -32
     146:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     148:	b7 04 00 00 00 00 00 00	r4 = 0
     149:	85 00 00 00 02 00 00 00	call 2
     150:	05 00 05 00 00 00 00 00	goto +5 <LBB1_24>

00000000000004b8 <LBB1_22>:
     151:	bf 61 00 00 00 00 00 00	r1 = r6
     152:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
     154:	b7 03 00 00 03 00 00 00	r3 = 3

00000000000004d8 <LBB1_23>:
     155:	85 00 00 00 0c 00 00 00	call 12

00000000000004e0 <LBB1_24>:
     156:	b7 00 00 00 00 00 00 00	r0 = 0
     157:	95 00 00 00 00 00 00 00	exit

00000000000004f0 <LBB1_25>:
     158:	bf 01 00 00 00 00 00 00	r1 = r0
     159:	07 01 00 00 b9 77 ff ff	r1 += -34887
     160:	b7 02 00 00 02 00 00 00	r2 = 2
     161:	2d 12 06 00 00 00 00 00	if r2 > r1 goto +6 <LBB1_28>
     162:	55 00 f9 ff a8 88 00 00	if r0 != 34984 goto -7 <LBB1_24>

0000000000000518 <LBB1_27>:
     163:	bf 61 00 00 00 00 00 00	r1 = r6
     164:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
     166:	b7 03 00 00 01 00 00 00	r3 = 1
     167:	05 00 f3 ff 00 00 00 00	goto -13 <LBB1_23>

0000000000000540 <LBB1_28>:
     168:	bf 61 00 00 00 00 00 00	r1 = r6
     169:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
     171:	b7 03 00 00 02 00 00 00	r3 = 2
     172:	05 00 ee ff 00 00 00 00	goto -18 <LBB1_23>

Disassembly of section socket/1:

0000000000000000 <bpf_func_PARSE_VLAN>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	61 67 30 00 00 00 00 00	r7 = *(u32 *)(r6 + 48)
       2:	bf 72 00 00 00 00 00 00	r2 = r7
       3:	07 02 00 00 02 00 00 00	r2 += 2
       4:	48 20 00 00 00 00 00 00	r0 = *(u16 *)skb[r2]
       5:	07 07 00 00 04 00 00 00	r7 += 4
       6:	63 76 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r7
       7:	67 00 00 00 20 00 00 00	r0 <<= 32
       8:	77 00 00 00 20 00 00 00	r0 >>= 32
       9:	65 00 09 00 46 88 00 00	if r0 s> 34886 goto +9 <LBB2_4>
      10:	15 00 17 00 00 08 00 00	if r0 == 2048 goto +23 <LBB2_8>
      11:	15 00 0c 00 00 81 00 00	if r0 == 33024 goto +12 <LBB2_6>
      12:	15 00 01 00 dd 86 00 00	if r0 == 34525 goto +1 <LBB2_9>
      13:	05 00 19 00 00 00 00 00	goto +25 <LBB2_11>

0000000000000070 <LBB2_9>:
      14:	bf 61 00 00 00 00 00 00	r1 = r6
      15:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      17:	b7 03 00 00 04 00 00 00	r3 = 4
      18:	05 00 13 00 00 00 00 00	goto +19 <LBB2_10>

0000000000000098 <LBB2_4>:
      19:	bf 01 00 00 00 00 00 00	r1 = r0
      20:	07 01 00 00 b9 77 ff ff	r1 += -34887
      21:	b7 02 00 00 02 00 00 00	r2 = 2
      22:	2d 12 06 00 00 00 00 00	if r2 > r1 goto +6 <LBB2_7>
      23:	55 00 0f 00 a8 88 00 00	if r0 != 34984 goto +15 <LBB2_11>

00000000000000c0 <LBB2_6>:
      24:	bf 61 00 00 00 00 00 00	r1 = r6
      25:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      27:	b7 03 00 00 01 00 00 00	r3 = 1
      28:	05 00 09 00 00 00 00 00	goto +9 <LBB2_10>

00000000000000e8 <LBB2_7>:
      29:	bf 61 00 00 00 00 00 00	r1 = r6
      30:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      32:	b7 03 00 00 02 00 00 00	r3 = 2
      33:	05 00 04 00 00 00 00 00	goto +4 <LBB2_10>

0000000000000110 <LBB2_8>:
      34:	bf 61 00 00 00 00 00 00	r1 = r6
      35:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      37:	b7 03 00 00 03 00 00 00	r3 = 3

0000000000000130 <LBB2_10>:
      38:	85 00 00 00 0c 00 00 00	call 12

0000000000000138 <LBB2_11>:
      39:	b7 00 00 00 00 00 00 00	r0 = 0
      40:	95 00 00 00 00 00 00 00	exit

Disassembly of section socket/2:

0000000000000000 <bpf_func_PARSE_MPLS>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	61 67 30 00 00 00 00 00	r7 = *(u32 *)(r6 + 48)
       2:	40 70 00 00 00 00 00 00	r0 = *(u32 *)skb[r7]
       3:	07 07 00 00 04 00 00 00	r7 += 4
       4:	63 76 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r7
       5:	57 00 00 00 00 01 00 00	r0 &= 256
       6:	15 00 05 00 00 00 00 00	if r0 == 0 goto +5 <LBB3_2>
       7:	bf 61 00 00 00 00 00 00	r1 = r6
       8:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      10:	b7 03 00 00 04 00 00 00	r3 = 4
      11:	05 00 04 00 00 00 00 00	goto +4 <LBB3_3>

0000000000000060 <LBB3_2>:
      12:	bf 61 00 00 00 00 00 00	r1 = r6
      13:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      15:	b7 03 00 00 02 00 00 00	r3 = 2

0000000000000080 <LBB3_3>:
      16:	85 00 00 00 0c 00 00 00	call 12
      17:	b7 00 00 00 00 00 00 00	r0 = 0
      18:	95 00 00 00 00 00 00 00	exit

Disassembly of section socket/0:

0000000000000000 <main_prog>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	28 00 00 00 0c 00 00 00	r0 = *(u16 *)skb[12]
       2:	b7 01 00 00 0e 00 00 00	r1 = 14
       3:	63 16 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r1
       4:	67 00 00 00 20 00 00 00	r0 <<= 32
       5:	77 00 00 00 20 00 00 00	r0 >>= 32
       6:	65 00 09 00 46 88 00 00	if r0 s> 34886 goto +9 <LBB4_4>
       7:	15 00 17 00 00 08 00 00	if r0 == 2048 goto +23 <LBB4_8>
       8:	15 00 0c 00 00 81 00 00	if r0 == 33024 goto +12 <LBB4_6>
       9:	15 00 01 00 dd 86 00 00	if r0 == 34525 goto +1 <LBB4_9>
      10:	05 00 19 00 00 00 00 00	goto +25 <LBB4_11>

0000000000000058 <LBB4_9>:
      11:	bf 61 00 00 00 00 00 00	r1 = r6
      12:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      14:	b7 03 00 00 04 00 00 00	r3 = 4
      15:	05 00 13 00 00 00 00 00	goto +19 <LBB4_10>

0000000000000080 <LBB4_4>:
      16:	bf 01 00 00 00 00 00 00	r1 = r0
      17:	07 01 00 00 b9 77 ff ff	r1 += -34887
      18:	b7 02 00 00 02 00 00 00	r2 = 2
      19:	2d 12 06 00 00 00 00 00	if r2 > r1 goto +6 <LBB4_7>
      20:	55 00 0f 00 a8 88 00 00	if r0 != 34984 goto +15 <LBB4_11>

00000000000000a8 <LBB4_6>:
      21:	bf 61 00 00 00 00 00 00	r1 = r6
      22:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      24:	b7 03 00 00 01 00 00 00	r3 = 1
      25:	05 00 09 00 00 00 00 00	goto +9 <LBB4_10>

00000000000000d0 <LBB4_7>:
      26:	bf 61 00 00 00 00 00 00	r1 = r6
      27:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      29:	b7 03 00 00 02 00 00 00	r3 = 2
      30:	05 00 04 00 00 00 00 00	goto +4 <LBB4_10>

00000000000000f8 <LBB4_8>:
      31:	bf 61 00 00 00 00 00 00	r1 = r6
      32:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      34:	b7 03 00 00 03 00 00 00	r3 = 3

0000000000000118 <LBB4_10>:
      35:	85 00 00 00 0c 00 00 00	call 12

0000000000000120 <LBB4_11>:
      36:	b7 00 00 00 00 00 00 00	r0 = 0
      37:	95 00 00 00 00 00 00 00	exit
