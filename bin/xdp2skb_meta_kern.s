
./ebpf-samples/all/xdp2skb_meta_kern.o:	file format elf64-bpf

Disassembly of section xdp_mark:

0000000000000000 <_xdp_mark>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	18 02 00 00 fc ff ff ff 00 00 00 00 00 00 00 00	r2 = 4294967292 ll
       3:	85 00 00 00 36 00 00 00	call 54
       4:	bf 01 00 00 00 00 00 00	r1 = r0
       5:	67 01 00 00 20 00 00 00	r1 <<= 32
       6:	c7 01 00 00 20 00 00 00	r1 s>>= 32
       7:	b7 00 00 00 00 00 00 00	r0 = 0
       8:	6d 10 08 00 00 00 00 00	if r0 s> r1 goto +8 <LBB0_3>
       9:	61 62 00 00 00 00 00 00	r2 = *(u32 *)(r6 + 0)
      10:	61 61 08 00 00 00 00 00	r1 = *(u32 *)(r6 + 8)
      11:	bf 13 00 00 00 00 00 00	r3 = r1
      12:	07 03 00 00 04 00 00 00	r3 += 4
      13:	2d 23 03 00 00 00 00 00	if r3 > r2 goto +3 <LBB0_3>
      14:	b7 02 00 00 2a 00 00 00	r2 = 42
      15:	63 21 00 00 00 00 00 00	*(u32 *)(r1 + 0) = r2
      16:	b7 00 00 00 02 00 00 00	r0 = 2

0000000000000088 <LBB0_3>:
      17:	95 00 00 00 00 00 00 00	exit

Disassembly of section tc_mark:

0000000000000000 <_tc_mark>:
       0:	b7 02 00 00 29 00 00 00	r2 = 41
       1:	61 14 4c 00 00 00 00 00	r4 = *(u32 *)(r1 + 76)
       2:	61 13 8c 00 00 00 00 00	r3 = *(u32 *)(r1 + 140)
       3:	bf 35 00 00 00 00 00 00	r5 = r3
       4:	07 05 00 00 04 00 00 00	r5 += 4
       5:	2d 45 01 00 00 00 00 00	if r5 > r4 goto +1 <LBB1_2>
       6:	61 32 00 00 00 00 00 00	r2 = *(u32 *)(r3 + 0)

0000000000000038 <LBB1_2>:
       7:	63 21 08 00 00 00 00 00	*(u32 *)(r1 + 8) = r2
       8:	b7 00 00 00 00 00 00 00	r0 = 0
       9:	95 00 00 00 00 00 00 00	exit
