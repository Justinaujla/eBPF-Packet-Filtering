
./ebpf-samples/all/trace_event_kern.o:	file format elf64-bpf

Disassembly of section perf_event:

0000000000000000 <bpf_prog1>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	b7 01 00 00 6c 75 00 00	r1 = 30060
       2:	6b 1a f4 ff 00 00 00 00	*(u16 *)(r10 - 12) = r1
       3:	b7 01 00 00 3a 20 25 6c	r1 = 1814372410
       4:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
       5:	18 01 00 00 20 52 75 6e 00 00 00 00 6e 69 6e 67	r1 = 7453010356365251104 ll
       7:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
       8:	18 01 00 00 6c 75 2c 20 00 00 00 00 54 69 6d 65	r1 = 7308613580330136940 ll
      10:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      11:	18 01 00 00 62 6c 65 64 00 00 00 00 3a 20 25 6c	r1 = 7792670165399071842 ll
      13:	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r1
      14:	18 01 00 00 54 69 6d 65 00 00 00 00 20 45 6e 61	r1 = 7020624874560121172 ll
      16:	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r1
      17:	b7 01 00 00 00 00 00 00	r1 = 0
      18:	73 1a f6 ff 00 00 00 00	*(u8 *)(r10 - 10) = r1
      19:	b7 02 00 00 3a 20 25 64	r2 = 1680154682
      20:	63 2a c8 ff 00 00 00 00	*(u32 *)(r10 - 56) = r2
      21:	18 02 00 00 20 45 72 72 00 00 00 00 43 6f 64 65	r2 = 7306086830975370528 ll
      23:	7b 2a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r2
      24:	18 02 00 00 20 46 61 69 00 00 00 00 6c 65 64 2c	r2 = 3198793151638750752 ll
      26:	7b 2a b8 ff 00 00 00 00	*(u64 *)(r10 - 72) = r2
      27:	18 02 00 00 47 65 74 20 00 00 00 00 54 69 6d 65	r2 = 7308613580334851399 ll
      29:	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r2
      30:	73 1a cc ff 00 00 00 00	*(u8 *)(r10 - 52) = r1
      31:	18 02 00 00 74 3a 20 25 00 00 00 00 6c 6c 78 00	r2 = 33896208940415604 ll
      33:	7b 2a a8 ff 00 00 00 00	*(u64 *)(r10 - 88) = r2
      34:	18 02 00 00 20 6f 6e 20 00 00 00 00 65 76 65 6e	r2 = 7954894493527732000 ll
      36:	7b 2a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r2
      37:	18 02 00 00 72 65 63 6f 00 00 00 00 72 64 65 64	r2 = 7234298819098404210 ll
      39:	7b 2a 98 ff 00 00 00 00	*(u64 *)(r10 - 104) = r2
      40:	18 02 00 00 41 64 64 72 00 00 00 00 65 73 73 20	r2 = 2338339511083492417 ll
      42:	7b 2a 90 ff 00 00 00 00	*(u64 *)(r10 - 112) = r2
      43:	73 1a 8a ff 00 00 00 00	*(u8 *)(r10 - 118) = r1
      44:	b7 01 00 00 6c 78 00 00	r1 = 30828
      45:	6b 1a 88 ff 00 00 00 00	*(u16 *)(r10 - 120) = r1
      46:	18 01 00 00 6c 64 20 69 00 00 00 00 70 20 25 6c	r1 = 7792670397406667884 ll
      48:	7b 1a 80 ff 00 00 00 00	*(u64 *)(r10 - 128) = r1
      49:	18 01 00 00 65 72 69 6f 00 00 00 00 64 20 25 6c	r1 = 7792670345972511333 ll
      51:	7b 1a 78 ff 00 00 00 00	*(u64 *)(r10 - 136) = r1
      52:	18 01 00 00 43 50 55 2d 00 00 00 00 25 64 20 70	r1 = 8079567842339803203 ll
      54:	7b 1a 70 ff 00 00 00 00	*(u64 *)(r10 - 144) = r1
      55:	85 00 00 00 08 00 00 00	call 8
      56:	bf 07 00 00 00 00 00 00	r7 = r0
      57:	b7 01 00 00 01 00 00 00	r1 = 1
      58:	7b 1a 38 ff 00 00 00 00	*(u64 *)(r10 - 200) = r1
      59:	79 61 a8 00 00 00 00 00	r1 = *(u64 *)(r6 + 168)
      60:	b7 02 00 00 10 27 00 00	r2 = 10000
      61:	2d 12 4a 00 00 00 00 00	if r2 > r1 goto +74 <LBB0_11>
      62:	bf a1 00 00 00 00 00 00	r1 = r10
      63:	07 01 00 00 40 ff ff ff	r1 += -192
      64:	b7 02 00 00 10 00 00 00	r2 = 16
      65:	85 00 00 00 10 00 00 00	call 16
      66:	bf 61 00 00 00 00 00 00	r1 = r6
      67:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      69:	b7 03 00 00 00 02 00 00	r3 = 512
      70:	85 00 00 00 1b 00 00 00	call 27
      71:	63 0a 50 ff 00 00 00 00	*(u32 *)(r10 - 176) = r0
      72:	bf 61 00 00 00 00 00 00	r1 = r6
      73:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      75:	b7 03 00 00 00 03 00 00	r3 = 768
      76:	85 00 00 00 1b 00 00 00	call 27
      77:	63 0a 54 ff 00 00 00 00	*(u32 *)(r10 - 172) = r0
      78:	61 a1 50 ff 00 00 00 00	r1 = *(u32 *)(r10 - 176)
      79:	5f 01 00 00 00 00 00 00	r1 &= r0
      80:	67 01 00 00 20 00 00 00	r1 <<= 32
      81:	c7 01 00 00 20 00 00 00	r1 s>>= 32
      82:	65 01 08 00 ff ff ff ff	if r1 s> -1 goto +8 <LBB0_3>
      83:	79 65 80 00 00 00 00 00	r5 = *(u64 *)(r6 + 128)
      84:	79 64 a8 00 00 00 00 00	r4 = *(u64 *)(r6 + 168)
      85:	bf a1 00 00 00 00 00 00	r1 = r10
      86:	07 01 00 00 70 ff ff ff	r1 += -144
      87:	b7 02 00 00 1b 00 00 00	r2 = 27
      88:	bf 73 00 00 00 00 00 00	r3 = r7
      89:	85 00 00 00 06 00 00 00	call 6
      90:	05 00 2d 00 00 00 00 00	goto +45 <LBB0_11>

00000000000002d8 <LBB0_3>:
      91:	bf a2 00 00 00 00 00 00	r2 = r10
      92:	07 02 00 00 58 ff ff ff	r2 += -168
      93:	bf 61 00 00 00 00 00 00	r1 = r6
      94:	b7 03 00 00 18 00 00 00	r3 = 24
      95:	85 00 00 00 38 00 00 00	call 56
      96:	bf 01 00 00 00 00 00 00	r1 = r0
      97:	67 01 00 00 20 00 00 00	r1 <<= 32
      98:	77 01 00 00 20 00 00 00	r1 >>= 32
      99:	55 01 07 00 00 00 00 00	if r1 != 0 goto +7 <LBB0_5>
     100:	79 a4 68 ff 00 00 00 00	r4 = *(u64 *)(r10 - 152)
     101:	79 a3 60 ff 00 00 00 00	r3 = *(u64 *)(r10 - 160)
     102:	bf a1 00 00 00 00 00 00	r1 = r10
     103:	07 01 00 00 d0 ff ff ff	r1 += -48
     104:	b7 02 00 00 27 00 00 00	r2 = 39
     105:	85 00 00 00 06 00 00 00	call 6
     106:	05 00 05 00 00 00 00 00	goto +5 <LBB0_6>

0000000000000358 <LBB0_5>:
     107:	bf a1 00 00 00 00 00 00	r1 = r10
     108:	07 01 00 00 b0 ff ff ff	r1 += -80
     109:	b7 02 00 00 1d 00 00 00	r2 = 29
     110:	bf 03 00 00 00 00 00 00	r3 = r0
     111:	85 00 00 00 06 00 00 00	call 6

0000000000000380 <LBB0_6>:
     112:	79 63 b0 00 00 00 00 00	r3 = *(u64 *)(r6 + 176)
     113:	15 03 04 00 00 00 00 00	if r3 == 0 goto +4 <LBB0_8>
     114:	bf a1 00 00 00 00 00 00	r1 = r10
     115:	07 01 00 00 90 ff ff ff	r1 += -112
     116:	b7 02 00 00 20 00 00 00	r2 = 32
     117:	85 00 00 00 06 00 00 00	call 6

00000000000003b0 <LBB0_8>:
     118:	bf a2 00 00 00 00 00 00	r2 = r10
     119:	07 02 00 00 40 ff ff ff	r2 += -192
     120:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     122:	85 00 00 00 01 00 00 00	call 1
     123:	15 00 04 00 00 00 00 00	if r0 == 0 goto +4 <LBB0_10>
     124:	79 01 00 00 00 00 00 00	r1 = *(u64 *)(r0 + 0)
     125:	07 01 00 00 01 00 00 00	r1 += 1
     126:	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r1
     127:	05 00 08 00 00 00 00 00	goto +8 <LBB0_11>

0000000000000400 <LBB0_10>:
     128:	bf a2 00 00 00 00 00 00	r2 = r10
     129:	07 02 00 00 40 ff ff ff	r2 += -192
     130:	bf a3 00 00 00 00 00 00	r3 = r10
     131:	07 03 00 00 38 ff ff ff	r3 += -200
     132:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     134:	b7 04 00 00 01 00 00 00	r4 = 1
     135:	85 00 00 00 02 00 00 00	call 2

0000000000000440 <LBB0_11>:
     136:	b7 00 00 00 00 00 00 00	r0 = 0
     137:	95 00 00 00 00 00 00 00	exit
