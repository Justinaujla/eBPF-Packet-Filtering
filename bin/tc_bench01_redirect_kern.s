
./ebpf-samples/all/tc_bench01_redirect_kern.o:	file format elf64-bpf

Disassembly of section ingress_redirect:

0000000000000000 <_ingress_redirect>:
       0:	bf 17 00 00 00 00 00 00	r7 = r1
       1:	61 71 50 00 00 00 00 00	r1 = *(u32 *)(r7 + 80)
       2:	61 78 4c 00 00 00 00 00	r8 = *(u32 *)(r7 + 76)
       3:	b7 06 00 00 00 00 00 00	r6 = 0
       4:	63 6a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r6
       5:	bf 82 00 00 00 00 00 00	r2 = r8
       6:	07 02 00 00 0e 00 00 00	r2 += 14
       7:	2d 12 22 00 00 00 00 00	if r2 > r1 goto +34 <LBB0_9>
       8:	71 81 0c 00 00 00 00 00	r1 = *(u8 *)(r8 + 12)
       9:	71 82 0d 00 00 00 00 00	r2 = *(u8 *)(r8 + 13)
      10:	67 02 00 00 08 00 00 00	r2 <<= 8
      11:	4f 12 00 00 00 00 00 00	r2 |= r1
      12:	15 02 1d 00 08 06 00 00	if r2 == 1544 goto +29 <LBB0_9>
      13:	bf a2 00 00 00 00 00 00	r2 = r10
      14:	07 02 00 00 fc ff ff ff	r2 += -4
      15:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      17:	85 00 00 00 01 00 00 00	call 1
      18:	15 00 17 00 00 00 00 00	if r0 == 0 goto +23 <LBB0_9>
      19:	61 06 00 00 00 00 00 00	r6 = *(u32 *)(r0 + 0)
      20:	15 06 15 00 00 00 00 00	if r6 == 0 goto +21 <LBB0_9>
      21:	55 06 02 00 2a 00 00 00	if r6 != 42 goto +2 <LBB0_6>
      22:	b7 06 00 00 02 00 00 00	r6 = 2
      23:	05 00 12 00 00 00 00 00	goto +18 <LBB0_9>

00000000000000c0 <LBB0_6>:
      24:	61 71 24 00 00 00 00 00	r1 = *(u32 *)(r7 + 36)
      25:	5d 16 0c 00 00 00 00 00	if r6 != r1 goto +12 <LBB0_8>
      26:	69 81 00 00 00 00 00 00	r1 = *(u16 *)(r8 + 0)
      27:	69 82 06 00 00 00 00 00	r2 = *(u16 *)(r8 + 6)
      28:	6b 28 00 00 00 00 00 00	*(u16 *)(r8 + 0) = r2
      29:	69 82 08 00 00 00 00 00	r2 = *(u16 *)(r8 + 8)
      30:	69 83 02 00 00 00 00 00	r3 = *(u16 *)(r8 + 2)
      31:	6b 38 08 00 00 00 00 00	*(u16 *)(r8 + 8) = r3
      32:	6b 28 02 00 00 00 00 00	*(u16 *)(r8 + 2) = r2
      33:	69 82 0a 00 00 00 00 00	r2 = *(u16 *)(r8 + 10)
      34:	69 83 04 00 00 00 00 00	r3 = *(u16 *)(r8 + 4)
      35:	6b 38 0a 00 00 00 00 00	*(u16 *)(r8 + 10) = r3
      36:	6b 28 04 00 00 00 00 00	*(u16 *)(r8 + 4) = r2
      37:	6b 18 06 00 00 00 00 00	*(u16 *)(r8 + 6) = r1

0000000000000130 <LBB0_8>:
      38:	bf 61 00 00 00 00 00 00	r1 = r6
      39:	b7 02 00 00 00 00 00 00	r2 = 0
      40:	85 00 00 00 17 00 00 00	call 23
      41:	bf 06 00 00 00 00 00 00	r6 = r0

0000000000000150 <LBB0_9>:
      42:	bf 60 00 00 00 00 00 00	r0 = r6
      43:	95 00 00 00 00 00 00 00	exit
