
./ebpf-samples/all/bypass_filter.o:	file format elf64-bpf

Disassembly of section filter:

0000000000000000 <hashfilter>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	18 01 00 00 0e 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870158 ll
       3:	63 16 30 00 00 00 00 00	*(u32 *)(r6 + 48) = r1
       4:	61 61 10 00 00 00 00 00	r1 = *(u32 *)(r6 + 16)
       5:	15 01 29 00 86 dd 00 00	if r1 == 56710 goto +41 <LBB0_6>
       6:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
       8:	55 01 68 00 08 00 00 00	if r1 != 8 goto +104 <LBB0_10>
       9:	18 01 00 00 17 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870167 ll
      11:	50 10 00 00 00 00 00 00	r0 = *(u8 *)skb[r1]
      12:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
      14:	63 0a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r0
      15:	67 00 00 00 20 00 00 00	r0 <<= 32
      16:	77 00 00 00 20 00 00 00	r0 >>= 32
      17:	15 00 01 00 11 00 00 00	if r0 == 17 goto +1 <LBB0_4>
      18:	55 00 5e 00 06 00 00 00	if r0 != 6 goto +94 <LBB0_10>

0000000000000098 <LBB0_4>:
      19:	18 01 00 00 1a 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870170 ll
      21:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      22:	63 0a d8 ff 00 00 00 00	*(u32 *)(r10 - 40) = r0
      23:	18 01 00 00 1e 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870174 ll
      25:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      26:	63 0a dc ff 00 00 00 00	*(u32 *)(r10 - 36) = r0
      27:	18 09 00 00 0e 00 e0 ff 00 00 00 00 00 00 00 00	r9 = 4292870158 ll
      29:	50 90 00 00 00 00 00 00	r0 = *(u8 *)skb[r9]
      30:	bf 08 00 00 00 00 00 00	r8 = r0
      31:	67 08 00 00 02 00 00 00	r8 <<= 2
      32:	57 08 00 00 3c 00 00 00	r8 &= 60
      33:	0f 98 00 00 00 00 00 00	r8 += r9
      34:	40 80 00 00 00 00 00 00	r0 = *(u32 *)skb[r8]
      35:	bf 01 00 00 00 00 00 00	r1 = r0
      36:	77 01 00 00 10 00 00 00	r1 >>= 16
      37:	6b 1a e0 ff 00 00 00 00	*(u16 *)(r10 - 32) = r1
      38:	6b 0a e2 ff 00 00 00 00	*(u16 *)(r10 - 30) = r0
      39:	bf a2 00 00 00 00 00 00	r2 = r10
      40:	07 02 00 00 d8 ff ff ff	r2 += -40
      41:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      43:	85 00 00 00 01 00 00 00	call 1
      44:	bf 08 00 00 00 00 00 00	r8 = r0
      45:	15 08 43 00 00 00 00 00	if r8 == 0 goto +67 <LBB0_10>
      46:	05 00 38 00 00 00 00 00	goto +56 <LBB0_9>

0000000000000178 <LBB0_6>:
      47:	18 01 00 00 14 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870164 ll
      49:	50 10 00 00 00 00 00 00	r0 = *(u8 *)skb[r1]
      50:	bf 08 00 00 00 00 00 00	r8 = r0
      51:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
      53:	57 08 00 00 ff 00 00 00	r8 &= 255
      54:	15 08 01 00 11 00 00 00	if r8 == 17 goto +1 <LBB0_8>
      55:	55 08 39 00 06 00 00 00	if r8 != 6 goto +57 <LBB0_10>

00000000000001c0 <LBB0_8>:
      56:	18 01 00 00 16 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870166 ll
      58:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      59:	63 0a d8 ff 00 00 00 00	*(u32 *)(r10 - 40) = r0
      60:	18 01 00 00 1a 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870170 ll
      62:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      63:	63 0a dc ff 00 00 00 00	*(u32 *)(r10 - 36) = r0
      64:	18 01 00 00 1e 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870174 ll
      66:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      67:	63 0a e0 ff 00 00 00 00	*(u32 *)(r10 - 32) = r0
      68:	18 01 00 00 22 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870178 ll
      70:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      71:	63 0a e4 ff 00 00 00 00	*(u32 *)(r10 - 28) = r0
      72:	18 01 00 00 26 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870182 ll
      74:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      75:	63 0a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r0
      76:	18 01 00 00 2a 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870186 ll
      78:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      79:	63 0a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r0
      80:	18 01 00 00 2e 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870190 ll
      82:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      83:	63 0a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r0
      84:	18 01 00 00 32 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870194 ll
      86:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      87:	63 0a f4 ff 00 00 00 00	*(u32 *)(r10 - 12) = r0
      88:	18 01 00 00 36 00 e0 ff 00 00 00 00 00 00 00 00	r1 = 4292870198 ll
      90:	40 10 00 00 00 00 00 00	r0 = *(u32 *)skb[r1]
      91:	63 8a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r8
      92:	bf 01 00 00 00 00 00 00	r1 = r0
      93:	77 01 00 00 10 00 00 00	r1 >>= 16
      94:	6b 1a f8 ff 00 00 00 00	*(u16 *)(r10 - 8) = r1
      95:	6b 0a fa ff 00 00 00 00	*(u16 *)(r10 - 6) = r0
      96:	bf a2 00 00 00 00 00 00	r2 = r10
      97:	07 02 00 00 d8 ff ff ff	r2 += -40
      98:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
     100:	85 00 00 00 01 00 00 00	call 1
     101:	bf 08 00 00 00 00 00 00	r8 = r0
     102:	15 08 0a 00 00 00 00 00	if r8 == 0 goto +10 <LBB0_10>

0000000000000338 <LBB0_9>:
     103:	79 81 08 00 00 00 00 00	r1 = *(u64 *)(r8 + 8)
     104:	07 01 00 00 01 00 00 00	r1 += 1
     105:	7b 18 08 00 00 00 00 00	*(u64 *)(r8 + 8) = r1
     106:	61 61 00 00 00 00 00 00	r1 = *(u32 *)(r6 + 0)
     107:	79 82 10 00 00 00 00 00	r2 = *(u64 *)(r8 + 16)
     108:	0f 12 00 00 00 00 00 00	r2 += r1
     109:	7b 28 10 00 00 00 00 00	*(u64 *)(r8 + 16) = r2
     110:	85 00 00 00 05 00 00 00	call 5
     111:	7b 08 00 00 00 00 00 00	*(u64 *)(r8 + 0) = r0
     112:	b7 07 00 00 00 00 00 00	r7 = 0

0000000000000388 <LBB0_10>:
     113:	bf 70 00 00 00 00 00 00	r0 = r7
     114:	95 00 00 00 00 00 00 00	exit
