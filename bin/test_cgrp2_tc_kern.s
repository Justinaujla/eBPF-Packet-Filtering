
./ebpf-samples/all/test_cgrp2_tc_kern.o:	file format elf64-bpf

Disassembly of section filter:

0000000000000000 <handle_egress>:
       0:	61 13 50 00 00 00 00 00	r3 = *(u32 *)(r1 + 80)
       1:	61 12 4c 00 00 00 00 00	r2 = *(u32 *)(r1 + 76)
       2:	b7 04 00 00 64 0a 00 00	r4 = 2660
       3:	6b 4a f0 ff 00 00 00 00	*(u16 *)(r10 - 16) = r4
       4:	18 04 00 00 65 20 25 30 00 00 00 00 34 78 20 25	r4 = 2675270344199446629 ll
       6:	7b 4a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r4
       7:	18 04 00 00 64 6f 6e 74 00 00 00 00 20 63 61 72	r4 = 8241977784108216164 ll
       9:	7b 4a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r4
      10:	b7 06 00 00 00 00 00 00	r6 = 0
      11:	73 6a f2 ff 00 00 00 00	*(u8 *)(r10 - 14) = r6
      12:	b7 04 00 00 0a 00 00 00	r4 = 10
      13:	6b 4a dc ff 00 00 00 00	*(u16 *)(r10 - 36) = r4
      14:	b7 04 00 00 70 61 73 73	r4 = 1936941424
      15:	63 4a d8 ff 00 00 00 00	*(u32 *)(r10 - 40) = r4
      16:	18 04 00 00 72 65 6a 65 00 00 00 00 63 74 0a 00	r4 = 2942720019162482 ll
      18:	7b 4a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r4
      19:	bf 24 00 00 00 00 00 00	r4 = r2
      20:	07 04 00 00 36 00 00 00	r4 += 54
      21:	2d 34 1b 00 00 00 00 00	if r4 > r3 goto +27 <LBB0_7>
      22:	71 24 14 00 00 00 00 00	r4 = *(u8 *)(r2 + 20)
      23:	69 23 0c 00 00 00 00 00	r3 = *(u16 *)(r2 + 12)
      24:	55 03 01 00 86 dd 00 00	if r3 != 56710 goto +1 <LBB0_3>
      25:	15 04 05 00 3a 00 00 00	if r4 == 58 goto +5 <LBB0_4>

00000000000000d0 <LBB0_3>:
      26:	bf a1 00 00 00 00 00 00	r1 = r10
      27:	07 01 00 00 e0 ff ff ff	r1 += -32
      28:	b7 02 00 00 13 00 00 00	r2 = 19
      29:	85 00 00 00 06 00 00 00	call 6
      30:	05 00 12 00 00 00 00 00	goto +18 <LBB0_7>

00000000000000f8 <LBB0_4>:
      31:	b7 06 00 00 00 00 00 00	r6 = 0
      32:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
      34:	b7 03 00 00 00 00 00 00	r3 = 0
      35:	85 00 00 00 21 00 00 00	call 33
      36:	67 00 00 00 20 00 00 00	r0 <<= 32
      37:	77 00 00 00 20 00 00 00	r0 >>= 32
      38:	15 00 05 00 01 00 00 00	if r0 == 1 goto +5 <LBB0_6>
      39:	bf a1 00 00 00 00 00 00	r1 = r10
      40:	07 01 00 00 d8 ff ff ff	r1 += -40
      41:	b7 02 00 00 06 00 00 00	r2 = 6
      42:	85 00 00 00 06 00 00 00	call 6
      43:	05 00 05 00 00 00 00 00	goto +5 <LBB0_7>

0000000000000160 <LBB0_6>:
      44:	bf a1 00 00 00 00 00 00	r1 = r10
      45:	07 01 00 00 d0 ff ff ff	r1 += -48
      46:	b7 02 00 00 08 00 00 00	r2 = 8
      47:	85 00 00 00 06 00 00 00	call 6
      48:	b7 06 00 00 02 00 00 00	r6 = 2

0000000000000188 <LBB0_7>:
      49:	bf 60 00 00 00 00 00 00	r0 = r6
      50:	95 00 00 00 00 00 00 00	exit
