
./ebpf-samples/all/tcp_basertt_kern.o:	file format elf64-bpf

Disassembly of section sockops:

0000000000000000 <bpf_basertt>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	61 68 00 00 00 00 00 00	r8 = *(u32 *)(r6 + 0)
       2:	b7 01 00 00 00 00 00 00	r1 = 0
       3:	73 1a f0 ff 00 00 00 00	*(u8 *)(r10 - 16) = r1
       4:	18 01 00 00 61 6e 64 3a 00 00 00 00 20 25 64 0a	r1 = 748764258399186529 ll
       6:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
       7:	18 01 00 00 42 50 46 20 00 00 00 00 63 6f 6d 6d	r1 = 7885080994129530946 ll
       9:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      10:	bf a1 00 00 00 00 00 00	r1 = r10
      11:	07 01 00 00 e0 ff ff ff	r1 += -32
      12:	b7 02 00 00 11 00 00 00	r2 = 17
      13:	bf 83 00 00 00 00 00 00	r3 = r8
      14:	85 00 00 00 06 00 00 00	call 6
      15:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
      17:	61 61 14 00 00 00 00 00	r1 = *(u32 *)(r6 + 20)
      18:	55 01 1a 00 0a 00 00 00	if r1 != 10 goto +26 <LBB0_9>
      19:	61 61 20 00 00 00 00 00	r1 = *(u32 *)(r6 + 32)
      20:	61 62 30 00 00 00 00 00	r2 = *(u32 *)(r6 + 48)
      21:	5d 12 17 00 00 00 00 00	if r2 != r1 goto +23 <LBB0_9>
      22:	55 08 16 00 07 00 00 00	if r8 != 7 goto +22 <LBB0_9>
      23:	61 61 34 00 00 00 00 00	r1 = *(u32 *)(r6 + 52)
      24:	61 62 24 00 00 00 00 00	r2 = *(u32 *)(r6 + 36)
      25:	af 12 00 00 00 00 00 00	r2 ^= r1
      26:	57 02 00 00 ff f0 00 00	r2 &= 61695
      27:	55 02 11 00 00 00 00 00	if r2 != 0 goto +17 <LBB0_9>
      28:	bf a4 00 00 00 00 00 00	r4 = r10
      29:	07 04 00 00 e0 ff ff ff	r4 += -32
      30:	bf 61 00 00 00 00 00 00	r1 = r6
      31:	b7 02 00 00 06 00 00 00	r2 = 6
      32:	b7 03 00 00 0d 00 00 00	r3 = 13
      33:	b7 05 00 00 14 00 00 00	r5 = 20
      34:	85 00 00 00 39 00 00 00	call 57
      35:	bf 01 00 00 00 00 00 00	r1 = r0
      36:	67 01 00 00 20 00 00 00	r1 <<= 32
      37:	77 01 00 00 20 00 00 00	r1 >>= 32
      38:	55 01 03 00 00 00 00 00	if r1 != 0 goto +3 <LBB0_6>
      39:	b7 07 00 00 50 00 00 00	r7 = 80
      40:	61 a2 e0 ff 00 00 00 00	r2 = *(u32 *)(r10 - 32)
      41:	15 02 03 00 6e 76 00 00	if r2 == 30318 goto +3 <LBB0_9>

0000000000000150 <LBB0_6>:
      42:	55 01 01 00 00 00 00 00	if r1 != 0 goto +1 <LBB0_8>
      43:	b7 00 00 00 ff ff ff ff	r0 = -1

0000000000000160 <LBB0_8>:
      44:	bf 07 00 00 00 00 00 00	r7 = r0

0000000000000168 <LBB0_9>:
      45:	b7 01 00 00 0a 00 00 00	r1 = 10
      46:	6b 1a dc ff 00 00 00 00	*(u16 *)(r10 - 36) = r1
      47:	b7 01 00 00 67 20 25 64	r1 = 1680154727
      48:	63 1a d8 ff 00 00 00 00	*(u32 *)(r10 - 40) = r1
      49:	18 01 00 00 52 65 74 75 00 00 00 00 72 6e 69 6e	r1 = 7956011654602581330 ll
      51:	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r1
      52:	bf a1 00 00 00 00 00 00	r1 = r10
      53:	07 01 00 00 d0 ff ff ff	r1 += -48
      54:	b7 02 00 00 0e 00 00 00	r2 = 14
      55:	bf 73 00 00 00 00 00 00	r3 = r7
      56:	85 00 00 00 06 00 00 00	call 6
      57:	63 76 04 00 00 00 00 00	*(u32 *)(r6 + 4) = r7
      58:	b7 00 00 00 01 00 00 00	r0 = 1
      59:	95 00 00 00 00 00 00 00	exit
