
./ebpf-samples/all/tracex5_kern.o:	file format elf64-bpf

Disassembly of section kprobe/__seccomp_filter:

0000000000000000 <bpf_prog1>:
       0:	79 16 70 00 00 00 00 00	r6 = *(u64 *)(r1 + 112)
       1:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r2 = 0 ll
       3:	bf 63 00 00 00 00 00 00	r3 = r6
       4:	85 00 00 00 0c 00 00 00	call 12
       5:	bf 61 00 00 00 00 00 00	r1 = r6
       6:	07 01 00 00 9a ff ff ff	r1 += -102
       7:	67 01 00 00 20 00 00 00	r1 <<= 32
       8:	77 01 00 00 20 00 00 00	r1 >>= 32
       9:	25 01 16 00 16 00 00 00	if r1 > 22 goto +22 <LBB0_2>
      10:	b7 01 00 00 00 00 00 00	r1 = 0
      11:	73 1a f8 ff 00 00 00 00	*(u8 *)(r10 - 8) = r1
      12:	18 01 00 00 69 64 2f 67 00 00 00 00 69 64 29 0a	r1 = 732226818289919081 ll
      14:	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r1
      15:	18 01 00 00 65 74 20 75 00 00 00 00 69 64 2f 70	r1 = 8083790260252734565 ll
      17:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
      18:	18 01 00 00 6f 66 20 67 00 00 00 00 65 74 2f 73	r1 = 8299980617137809007 ll
      20:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      21:	18 01 00 00 25 64 20 28 00 00 00 00 6f 6e 65 20	r1 = 2334393405555106853 ll
      23:	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r1
      24:	18 01 00 00 73 79 73 63 00 00 00 00 61 6c 6c 3d	r1 = 4426031699334494579 ll
      26:	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r1
      27:	bf a1 00 00 00 00 00 00	r1 = r10
      28:	07 01 00 00 d0 ff ff ff	r1 += -48
      29:	b7 02 00 00 29 00 00 00	r2 = 41
      30:	bf 63 00 00 00 00 00 00	r3 = r6
      31:	85 00 00 00 06 00 00 00	call 6

0000000000000100 <LBB0_2>:
      32:	b7 00 00 00 00 00 00 00	r0 = 0
      33:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/1:

0000000000000000 <bpf_func_SYS__NR_write>:
       0:	79 13 68 00 00 00 00 00	r3 = *(u64 *)(r1 + 104)
       1:	bf a1 00 00 00 00 00 00	r1 = r10
       2:	07 01 00 00 c0 ff ff ff	r1 += -64
       3:	b7 02 00 00 40 00 00 00	r2 = 64
       4:	85 00 00 00 04 00 00 00	call 4
       5:	79 a1 e0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 32)
       6:	55 01 16 00 00 02 00 00	if r1 != 512 goto +22 <LBB1_2>
       7:	b7 01 00 00 00 00 00 00	r1 = 0
       8:	73 1a be ff 00 00 00 00	*(u8 *)(r10 - 66) = r1
       9:	b7 01 00 00 29 0a 00 00	r1 = 2601
      10:	6b 1a bc ff 00 00 00 00	*(u16 *)(r10 - 68) = r1
      11:	b7 01 00 00 65 3d 25 64	r1 = 1680162149
      12:	63 1a b8 ff 00 00 00 00	*(u32 *)(r10 - 72) = r1
      13:	18 01 00 00 3d 25 70 2c 00 00 00 00 20 73 69 7a	r1 = 8820707927203521853 ll
      15:	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r1
      16:	18 01 00 00 3d 25 64 2c 00 00 00 00 20 62 75 66	r1 = 7382915054467032381 ll
      18:	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 88) = r1
      19:	18 01 00 00 77 72 69 74 00 00 00 00 65 28 66 64	r1 = 7234514267627156087 ll
      21:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
      22:	79 a3 d0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 48)
      23:	79 a4 d8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 40)
      24:	bf a1 00 00 00 00 00 00	r1 = r10
      25:	07 01 00 00 a0 ff ff ff	r1 += -96
      26:	b7 02 00 00 1f 00 00 00	r2 = 31
      27:	b7 05 00 00 00 02 00 00	r5 = 512
      28:	85 00 00 00 06 00 00 00	call 6

00000000000000e8 <LBB1_2>:
      29:	b7 00 00 00 00 00 00 00	r0 = 0
      30:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/0:

0000000000000000 <bpf_func_SYS__NR_read>:
       0:	79 13 68 00 00 00 00 00	r3 = *(u64 *)(r1 + 104)
       1:	bf a1 00 00 00 00 00 00	r1 = r10
       2:	07 01 00 00 c0 ff ff ff	r1 += -64
       3:	b7 02 00 00 40 00 00 00	r2 = 64
       4:	85 00 00 00 04 00 00 00	call 4
       5:	79 a5 e0 ff 00 00 00 00	r5 = *(u64 *)(r10 - 32)
       6:	bf 51 00 00 00 00 00 00	r1 = r5
       7:	07 01 00 00 7f ff ff ff	r1 += -129
       8:	25 01 13 00 7f 03 00 00	if r1 > 895 goto +19 <LBB2_2>
       9:	b7 01 00 00 0a 00 00 00	r1 = 10
      10:	6b 1a bc ff 00 00 00 00	*(u16 *)(r10 - 68) = r1
      11:	b7 01 00 00 3d 25 64 29	r1 = 694428989
      12:	63 1a b8 ff 00 00 00 00	*(u32 *)(r10 - 72) = r1
      13:	18 01 00 00 25 70 2c 20 00 00 00 00 73 69 7a 65	r1 = 7312272888171360293 ll
      15:	7b 1a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r1
      16:	18 01 00 00 25 64 2c 20 00 00 00 00 62 75 66 3d	r1 = 4424352748245115941 ll
      18:	7b 1a a8 ff 00 00 00 00	*(u64 *)(r10 - 88) = r1
      19:	18 01 00 00 72 65 61 64 00 00 00 00 28 66 64 3d	r1 = 4423773057653499250 ll
      21:	7b 1a a0 ff 00 00 00 00	*(u64 *)(r10 - 96) = r1
      22:	79 a3 d0 ff 00 00 00 00	r3 = *(u64 *)(r10 - 48)
      23:	79 a4 d8 ff 00 00 00 00	r4 = *(u64 *)(r10 - 40)
      24:	bf a1 00 00 00 00 00 00	r1 = r10
      25:	07 01 00 00 a0 ff ff ff	r1 += -96
      26:	b7 02 00 00 1e 00 00 00	r2 = 30
      27:	85 00 00 00 06 00 00 00	call 6

00000000000000e0 <LBB2_2>:
      28:	b7 00 00 00 00 00 00 00	r0 = 0
      29:	95 00 00 00 00 00 00 00	exit

Disassembly of section kprobe/9:

0000000000000000 <bpf_func_SYS__NR_mmap>:
       0:	b7 01 00 00 0a 00 00 00	r1 = 10
       1:	6b 1a fc ff 00 00 00 00	*(u16 *)(r10 - 4) = r1
       2:	b7 01 00 00 6d 6d 61 70	r1 = 1885433197
       3:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
       4:	bf a1 00 00 00 00 00 00	r1 = r10
       5:	07 01 00 00 f8 ff ff ff	r1 += -8
       6:	b7 02 00 00 06 00 00 00	r2 = 6
       7:	85 00 00 00 06 00 00 00	call 6
       8:	b7 00 00 00 00 00 00 00	r0 = 0
       9:	95 00 00 00 00 00 00 00	exit
