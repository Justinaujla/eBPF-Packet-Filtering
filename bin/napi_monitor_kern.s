
./ebpf-samples/all/napi_monitor_kern.o:	file format elf64-bpf

Disassembly of section tracepoint/napi/napi_poll:

0000000000000000 <napi_poll>:
       0:	79 17 08 00 00 00 00 00	r7 = *(u64 *)(r1 + 8)
       1:	61 18 14 00 00 00 00 00	r8 = *(u32 *)(r1 + 20)
       2:	61 19 18 00 00 00 00 00	r9 = *(u32 *)(r1 + 24)
       3:	b7 01 00 00 00 00 00 00	r1 = 0
       4:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       5:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
       6:	bf a2 00 00 00 00 00 00	r2 = r10
       7:	07 02 00 00 fc ff ff ff	r2 += -4
       8:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      10:	85 00 00 00 01 00 00 00	call 1
      11:	bf 06 00 00 00 00 00 00	r6 = r0
      12:	15 06 22 00 00 00 00 00	if r6 == 0 goto +34 <LBB0_10>
      13:	15 07 06 00 00 00 00 00	if r7 == 0 goto +6 <LBB0_3>
      14:	07 07 00 00 a8 00 00 00	r7 += 168
      15:	bf a1 00 00 00 00 00 00	r1 = r10
      16:	07 01 00 00 f8 ff ff ff	r1 += -8
      17:	b7 02 00 00 04 00 00 00	r2 = 4
      18:	bf 73 00 00 00 00 00 00	r3 = r7
      19:	85 00 00 00 04 00 00 00	call 4

00000000000000a0 <LBB0_3>:
      20:	b7 01 00 00 02 00 00 00	r1 = 2
      21:	2d 98 0c 00 00 00 00 00	if r8 > r9 goto +12 <LBB0_8>
      22:	25 08 07 00 40 00 00 00	if r8 > 64 goto +7 <LBB0_6>
      23:	bf 81 00 00 00 00 00 00	r1 = r8
      24:	67 01 00 00 03 00 00 00	r1 <<= 3
      25:	bf 62 00 00 00 00 00 00	r2 = r6
      26:	0f 12 00 00 00 00 00 00	r2 += r1
      27:	79 21 00 00 00 00 00 00	r1 = *(u64 *)(r2 + 0)
      28:	07 01 00 00 01 00 00 00	r1 += 1
      29:	7b 12 00 00 00 00 00 00	*(u64 *)(r2 + 0) = r1

00000000000000f0 <LBB0_6>:
      30:	85 00 00 00 0e 00 00 00	call 14
      31:	b7 01 00 00 01 00 00 00	r1 = 1
      32:	55 00 01 00 00 00 00 00	if r0 != 0 goto +1 <LBB0_8>
      33:	b7 01 00 00 00 00 00 00	r1 = 0

0000000000000110 <LBB0_8>:
      34:	27 01 00 00 18 00 00 00	r1 *= 24
      35:	07 06 00 00 08 02 00 00	r6 += 520
      36:	0f 16 00 00 00 00 00 00	r6 += r1
      37:	79 61 00 00 00 00 00 00	r1 = *(u64 *)(r6 + 0)
      38:	07 01 00 00 01 00 00 00	r1 += 1
      39:	7b 16 00 00 00 00 00 00	*(u64 *)(r6 + 0) = r1
      40:	79 61 10 00 00 00 00 00	r1 = *(u64 *)(r6 + 16)
      41:	0f 81 00 00 00 00 00 00	r1 += r8
      42:	7b 16 10 00 00 00 00 00	*(u64 *)(r6 + 16) = r1
      43:	55 08 03 00 00 00 00 00	if r8 != 0 goto +3 <LBB0_10>
      44:	79 61 08 00 00 00 00 00	r1 = *(u64 *)(r6 + 8)
      45:	07 01 00 00 01 00 00 00	r1 += 1
      46:	7b 16 08 00 00 00 00 00	*(u64 *)(r6 + 8) = r1

0000000000000178 <LBB0_10>:
      47:	b7 00 00 00 00 00 00 00	r0 = 0
      48:	95 00 00 00 00 00 00 00	exit

Disassembly of section tracepoint/irq/softirq_entry:

0000000000000000 <softirq_entry>:
       0:	61 16 08 00 00 00 00 00	r6 = *(u32 *)(r1 + 8)
       1:	b7 01 00 00 00 00 00 00	r1 = 0
       2:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       3:	bf a2 00 00 00 00 00 00	r2 = r10
       4:	07 02 00 00 fc ff ff ff	r2 += -4
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	85 00 00 00 01 00 00 00	call 1
       8:	25 06 06 00 09 00 00 00	if r6 > 9 goto +6 <LBB1_3>
       9:	15 00 05 00 00 00 00 00	if r0 == 0 goto +5 <LBB1_3>
      10:	27 06 00 00 18 00 00 00	r6 *= 24
      11:	0f 60 00 00 00 00 00 00	r0 += r6
      12:	79 01 00 00 00 00 00 00	r1 = *(u64 *)(r0 + 0)
      13:	07 01 00 00 01 00 00 00	r1 += 1
      14:	7b 10 00 00 00 00 00 00	*(u64 *)(r0 + 0) = r1

0000000000000078 <LBB1_3>:
      15:	b7 00 00 00 00 00 00 00	r0 = 0
      16:	95 00 00 00 00 00 00 00	exit

Disassembly of section tracepoint/irq/softirq_exit:

0000000000000000 <softirq_exit>:
       0:	61 16 08 00 00 00 00 00	r6 = *(u32 *)(r1 + 8)
       1:	b7 01 00 00 00 00 00 00	r1 = 0
       2:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       3:	bf a2 00 00 00 00 00 00	r2 = r10
       4:	07 02 00 00 fc ff ff ff	r2 += -4
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	85 00 00 00 01 00 00 00	call 1
       8:	25 06 06 00 09 00 00 00	if r6 > 9 goto +6 <LBB2_3>
       9:	15 00 05 00 00 00 00 00	if r0 == 0 goto +5 <LBB2_3>
      10:	27 06 00 00 18 00 00 00	r6 *= 24
      11:	0f 60 00 00 00 00 00 00	r0 += r6
      12:	79 01 08 00 00 00 00 00	r1 = *(u64 *)(r0 + 8)
      13:	07 01 00 00 01 00 00 00	r1 += 1
      14:	7b 10 08 00 00 00 00 00	*(u64 *)(r0 + 8) = r1

0000000000000078 <LBB2_3>:
      15:	b7 00 00 00 00 00 00 00	r0 = 0
      16:	95 00 00 00 00 00 00 00	exit

Disassembly of section tracepoint/irq/softirq_raise:

0000000000000000 <softirq_raise>:
       0:	61 16 08 00 00 00 00 00	r6 = *(u32 *)(r1 + 8)
       1:	b7 01 00 00 00 00 00 00	r1 = 0
       2:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       3:	bf a2 00 00 00 00 00 00	r2 = r10
       4:	07 02 00 00 fc ff ff ff	r2 += -4
       5:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
       7:	85 00 00 00 01 00 00 00	call 1
       8:	25 06 06 00 09 00 00 00	if r6 > 9 goto +6 <LBB3_3>
       9:	15 00 05 00 00 00 00 00	if r0 == 0 goto +5 <LBB3_3>
      10:	27 06 00 00 18 00 00 00	r6 *= 24
      11:	0f 60 00 00 00 00 00 00	r0 += r6
      12:	79 01 10 00 00 00 00 00	r1 = *(u64 *)(r0 + 16)
      13:	07 01 00 00 01 00 00 00	r1 += 1
      14:	7b 10 10 00 00 00 00 00	*(u64 *)(r0 + 16) = r1

0000000000000078 <LBB3_3>:
      15:	b7 00 00 00 00 00 00 00	r0 = 0
      16:	95 00 00 00 00 00 00 00	exit
