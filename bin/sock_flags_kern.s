
./ebpf-samples/all/sock_flags_kern.o:	file format elf64-bpf

Disassembly of section cgroup/sock1:

0000000000000000 <bpf_prog1>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	b7 01 00 00 64 0a 00 00	r1 = 2660
       2:	6b 1a f4 ff 00 00 00 00	*(u16 *)(r10 - 12) = r1
       3:	b7 01 00 00 6f 6c 20 25	r1 = 622881903
       4:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
       5:	18 01 00 00 64 20 70 72 00 00 00 00 6f 74 6f 63	r1 = 7165073554179891300 ll
       7:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
       8:	18 01 00 00 64 20 74 79 00 00 00 00 70 65 20 25	r1 = 2675249712406470756 ll
      10:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      11:	18 01 00 00 66 61 6d 69 00 00 00 00 6c 79 20 25	r1 = 2675271685190279526 ll
      13:	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r1
      14:	b7 01 00 00 00 00 00 00	r1 = 0
      15:	73 1a f6 ff 00 00 00 00	*(u8 *)(r10 - 10) = r1
      16:	18 02 00 00 73 6f 63 6b 00 00 00 00 65 74 3a 20	r2 = 2322296536805109619 ll
      18:	7b 2a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r2
      19:	73 1a c6 ff 00 00 00 00	*(u8 *)(r10 - 58) = r1
      20:	b7 01 00 00 75 0a 00 00	r1 = 2677
      21:	6b 1a c4 ff 00 00 00 00	*(u16 *)(r10 - 60) = r1
      22:	b7 01 00 00 69 64 20 25	r1 = 622879849
      23:	63 1a c0 ff 00 00 00 00	*(u32 *)(r10 - 64) = r1
      24:	18 01 00 00 75 69 64 20 00 00 00 00 25 75 20 67	r1 = 7431068187479009653 ll
      26:	7b 1a b8 ff 00 00 00 00	*(u64 *)(r10 - 72) = r1
      27:	7b 2a b0 ff 00 00 00 00	*(u64 *)(r10 - 80) = r2
      28:	85 00 00 00 0f 00 00 00	call 15
      29:	bf 07 00 00 00 00 00 00	r7 = r0
      30:	61 65 0c 00 00 00 00 00	r5 = *(u32 *)(r6 + 12)
      31:	61 64 08 00 00 00 00 00	r4 = *(u32 *)(r6 + 8)
      32:	61 63 04 00 00 00 00 00	r3 = *(u32 *)(r6 + 4)
      33:	bf a1 00 00 00 00 00 00	r1 = r10
      34:	07 01 00 00 d0 ff ff ff	r1 += -48
      35:	b7 02 00 00 27 00 00 00	r2 = 39
      36:	85 00 00 00 06 00 00 00	call 6
      37:	bf 74 00 00 00 00 00 00	r4 = r7
      38:	77 04 00 00 20 00 00 00	r4 >>= 32
      39:	bf a1 00 00 00 00 00 00	r1 = r10
      40:	07 01 00 00 b0 ff ff ff	r1 += -80
      41:	b7 02 00 00 17 00 00 00	r2 = 23
      42:	bf 73 00 00 00 00 00 00	r3 = r7
      43:	85 00 00 00 06 00 00 00	call 6
      44:	61 61 04 00 00 00 00 00	r1 = *(u32 *)(r6 + 4)
      45:	55 01 05 00 0a 00 00 00	if r1 != 10 goto +5 <LBB0_3>
      46:	61 61 08 00 00 00 00 00	r1 = *(u32 *)(r6 + 8)
      47:	55 01 03 00 03 00 00 00	if r1 != 3 goto +3 <LBB0_3>
      48:	b7 00 00 00 00 00 00 00	r0 = 0
      49:	61 61 0c 00 00 00 00 00	r1 = *(u32 *)(r6 + 12)
      50:	15 01 01 00 3a 00 00 00	if r1 == 58 goto +1 <LBB0_4>

0000000000000198 <LBB0_3>:
      51:	b7 00 00 00 01 00 00 00	r0 = 1

00000000000001a0 <LBB0_4>:
      52:	95 00 00 00 00 00 00 00	exit

Disassembly of section cgroup/sock2:

0000000000000000 <bpf_prog2>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	b7 01 00 00 00 00 00 00	r1 = 0
       2:	73 1a f6 ff 00 00 00 00	*(u8 *)(r10 - 10) = r1
       3:	b7 01 00 00 64 0a 00 00	r1 = 2660
       4:	6b 1a f4 ff 00 00 00 00	*(u16 *)(r10 - 12) = r1
       5:	b7 01 00 00 6f 6c 20 25	r1 = 622881903
       6:	63 1a f0 ff 00 00 00 00	*(u32 *)(r10 - 16) = r1
       7:	18 01 00 00 64 20 70 72 00 00 00 00 6f 74 6f 63	r1 = 7165073554179891300 ll
       9:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
      10:	18 01 00 00 64 20 74 79 00 00 00 00 70 65 20 25	r1 = 2675249712406470756 ll
      12:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      13:	18 01 00 00 66 61 6d 69 00 00 00 00 6c 79 20 25	r1 = 2675271685190279526 ll
      15:	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r1
      16:	18 01 00 00 73 6f 63 6b 00 00 00 00 65 74 3a 20	r1 = 2322296536805109619 ll
      18:	7b 1a d0 ff 00 00 00 00	*(u64 *)(r10 - 48) = r1
      19:	61 65 0c 00 00 00 00 00	r5 = *(u32 *)(r6 + 12)
      20:	61 64 08 00 00 00 00 00	r4 = *(u32 *)(r6 + 8)
      21:	61 63 04 00 00 00 00 00	r3 = *(u32 *)(r6 + 4)
      22:	bf a1 00 00 00 00 00 00	r1 = r10
      23:	07 01 00 00 d0 ff ff ff	r1 += -48
      24:	b7 02 00 00 27 00 00 00	r2 = 39
      25:	85 00 00 00 06 00 00 00	call 6
      26:	61 61 04 00 00 00 00 00	r1 = *(u32 *)(r6 + 4)
      27:	55 01 05 00 02 00 00 00	if r1 != 2 goto +5 <LBB1_3>
      28:	61 61 08 00 00 00 00 00	r1 = *(u32 *)(r6 + 8)
      29:	55 01 03 00 03 00 00 00	if r1 != 3 goto +3 <LBB1_3>
      30:	b7 00 00 00 00 00 00 00	r0 = 0
      31:	61 61 0c 00 00 00 00 00	r1 = *(u32 *)(r6 + 12)
      32:	15 01 01 00 01 00 00 00	if r1 == 1 goto +1 <LBB1_4>

0000000000000108 <LBB1_3>:
      33:	b7 00 00 00 01 00 00 00	r0 = 1

0000000000000110 <LBB1_4>:
      34:	95 00 00 00 00 00 00 00	exit
