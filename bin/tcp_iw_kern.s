
./ebpf-samples/all/tcp_iw_kern.o:	file format elf64-bpf

Disassembly of section sockops:

0000000000000000 <bpf_iw>:
       0:	bf 16 00 00 00 00 00 00	r6 = r1
       1:	b7 01 00 00 60 e3 16 00	r1 = 1500000
       2:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       3:	b7 01 00 00 28 00 00 00	r1 = 40
       4:	63 1a f8 ff 00 00 00 00	*(u32 *)(r10 - 8) = r1
       5:	61 61 40 00 00 00 00 00	r1 = *(u32 *)(r6 + 64)
       6:	15 01 04 00 00 00 d9 31	if r1 == 836304896 goto +4 <LBB0_2>
       7:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
       9:	61 61 44 00 00 00 00 00	r1 = *(u32 *)(r6 + 68)
      10:	55 01 3e 00 31 d9 00 00	if r1 != 55601 goto +62 <LBB0_11>

0000000000000058 <LBB0_2>:
      11:	61 68 00 00 00 00 00 00	r8 = *(u32 *)(r6 + 0)
      12:	b7 01 00 00 00 00 00 00	r1 = 0
      13:	73 1a f0 ff 00 00 00 00	*(u8 *)(r10 - 16) = r1
      14:	18 01 00 00 61 6e 64 3a 00 00 00 00 20 25 64 0a	r1 = 748764258399186529 ll
      16:	7b 1a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r1
      17:	18 01 00 00 42 50 46 20 00 00 00 00 63 6f 6d 6d	r1 = 7885080994129530946 ll
      19:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      20:	bf a1 00 00 00 00 00 00	r1 = r10
      21:	07 01 00 00 e0 ff ff ff	r1 += -32
      22:	b7 02 00 00 11 00 00 00	r2 = 17
      23:	bf 83 00 00 00 00 00 00	r3 = r8
      24:	85 00 00 00 06 00 00 00	call 6
      25:	65 08 16 00 03 00 00 00	if r8 s> 3 goto +22 <LBB0_5>
      26:	b7 07 00 00 28 00 00 00	r7 = 40
      27:	15 08 21 00 02 00 00 00	if r8 == 2 goto +33 <LBB0_10>
      28:	15 08 01 00 03 00 00 00	if r8 == 3 goto +1 <LBB0_8>
      29:	05 00 14 00 00 00 00 00	goto +20 <LBB0_9>

00000000000000f0 <LBB0_8>:
      30:	bf a7 00 00 00 00 00 00	r7 = r10
      31:	07 07 00 00 fc ff ff ff	r7 += -4
      32:	bf 61 00 00 00 00 00 00	r1 = r6
      33:	b7 02 00 00 01 00 00 00	r2 = 1
      34:	b7 03 00 00 07 00 00 00	r3 = 7
      35:	bf 74 00 00 00 00 00 00	r4 = r7
      36:	b7 05 00 00 04 00 00 00	r5 = 4
      37:	85 00 00 00 31 00 00 00	call 49
      38:	bf 08 00 00 00 00 00 00	r8 = r0
      39:	bf 61 00 00 00 00 00 00	r1 = r6
      40:	b7 02 00 00 01 00 00 00	r2 = 1
      41:	b7 03 00 00 08 00 00 00	r3 = 8
      42:	bf 74 00 00 00 00 00 00	r4 = r7
      43:	b7 05 00 00 04 00 00 00	r5 = 4
      44:	85 00 00 00 31 00 00 00	call 49
      45:	bf 07 00 00 00 00 00 00	r7 = r0
      46:	0f 87 00 00 00 00 00 00	r7 += r8
      47:	05 00 0d 00 00 00 00 00	goto +13 <LBB0_10>

0000000000000180 <LBB0_5>:
      48:	15 08 04 00 04 00 00 00	if r8 == 4 goto +4 <LBB0_7>
      49:	15 08 ec ff 05 00 00 00	if r8 == 5 goto -20 <LBB0_8>

0000000000000190 <LBB0_9>:
      50:	18 07 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r7 = 4294967295 ll
      52:	05 00 08 00 00 00 00 00	goto +8 <LBB0_10>

00000000000001a8 <LBB0_7>:
      53:	bf a4 00 00 00 00 00 00	r4 = r10
      54:	07 04 00 00 f8 ff ff ff	r4 += -8
      55:	bf 61 00 00 00 00 00 00	r1 = r6
      56:	b7 02 00 00 06 00 00 00	r2 = 6
      57:	b7 03 00 00 e9 03 00 00	r3 = 1001
      58:	b7 05 00 00 04 00 00 00	r5 = 4
      59:	85 00 00 00 31 00 00 00	call 49
      60:	bf 07 00 00 00 00 00 00	r7 = r0

00000000000001e8 <LBB0_10>:
      61:	b7 01 00 00 0a 00 00 00	r1 = 10
      62:	6b 1a ec ff 00 00 00 00	*(u16 *)(r10 - 20) = r1
      63:	b7 01 00 00 67 20 25 64	r1 = 1680154727
      64:	63 1a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r1
      65:	18 01 00 00 52 65 74 75 00 00 00 00 72 6e 69 6e	r1 = 7956011654602581330 ll
      67:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
      68:	bf a1 00 00 00 00 00 00	r1 = r10
      69:	07 01 00 00 e0 ff ff ff	r1 += -32
      70:	b7 02 00 00 0e 00 00 00	r2 = 14
      71:	bf 73 00 00 00 00 00 00	r3 = r7
      72:	85 00 00 00 06 00 00 00	call 6

0000000000000248 <LBB0_11>:
      73:	63 76 04 00 00 00 00 00	*(u32 *)(r6 + 4) = r7
      74:	b7 00 00 00 01 00 00 00	r0 = 1
      75:	95 00 00 00 00 00 00 00	exit
