
./ebpf-samples/all/xdp_ttl_kern.o:	file format elf64-bpf

Disassembly of section xdp_ttl:

0000000000000000 <xdp_ttl_program>:
       0:	b7 00 00 00 02 00 00 00	r0 = 2
       1:	61 12 04 00 00 00 00 00	r2 = *(u32 *)(r1 + 4)
       2:	61 11 00 00 00 00 00 00	r1 = *(u32 *)(r1 + 0)
       3:	bf 13 00 00 00 00 00 00	r3 = r1
       4:	07 03 00 00 0e 00 00 00	r3 += 14
       5:	2d 23 24 00 00 00 00 00	if r3 > r2 goto +36 <LBB0_10>
       6:	71 14 0c 00 00 00 00 00	r4 = *(u8 *)(r1 + 12)
       7:	71 13 0d 00 00 00 00 00	r3 = *(u8 *)(r1 + 13)
       8:	67 03 00 00 08 00 00 00	r3 <<= 8
       9:	4f 43 00 00 00 00 00 00	r3 |= r4
      10:	bf 34 00 00 00 00 00 00	r4 = r3
      11:	57 04 00 00 ff 00 00 00	r4 &= 255
      12:	b7 05 00 00 06 00 00 00	r5 = 6
      13:	2d 45 1c 00 00 00 00 00	if r5 > r4 goto +28 <LBB0_10>
      14:	15 03 02 00 88 a8 00 00	if r3 == 43144 goto +2 <LBB0_4>
      15:	b7 04 00 00 0e 00 00 00	r4 = 14
      16:	55 03 05 00 81 00 00 00	if r3 != 129 goto +5 <LBB0_6>

0000000000000088 <LBB0_4>:
      17:	bf 13 00 00 00 00 00 00	r3 = r1
      18:	07 03 00 00 12 00 00 00	r3 += 18
      19:	2d 23 16 00 00 00 00 00	if r3 > r2 goto +22 <LBB0_10>
      20:	b7 04 00 00 12 00 00 00	r4 = 18
      21:	69 13 10 00 00 00 00 00	r3 = *(u16 *)(r1 + 16)

00000000000000b0 <LBB0_6>:
      22:	57 03 00 00 ff ff 00 00	r3 &= 65535
      23:	55 03 12 00 08 00 00 00	if r3 != 8 goto +18 <LBB0_10>
      24:	0f 41 00 00 00 00 00 00	r1 += r4
      25:	b7 00 00 00 00 00 00 00	r0 = 0
      26:	bf 13 00 00 00 00 00 00	r3 = r1
      27:	07 03 00 00 14 00 00 00	r3 += 20
      28:	2d 23 0d 00 00 00 00 00	if r3 > r2 goto +13 <LBB0_10>
      29:	71 11 08 00 00 00 00 00	r1 = *(u8 *)(r1 + 8)
      30:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
      31:	bf a2 00 00 00 00 00 00	r2 = r10
      32:	07 02 00 00 fc ff ff ff	r2 += -4
      33:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      35:	85 00 00 00 01 00 00 00	call 1
      36:	bf 01 00 00 00 00 00 00	r1 = r0
      37:	b7 00 00 00 02 00 00 00	r0 = 2
      38:	15 01 03 00 00 00 00 00	if r1 == 0 goto +3 <LBB0_10>
      39:	79 12 00 00 00 00 00 00	r2 = *(u64 *)(r1 + 0)
      40:	07 02 00 00 01 00 00 00	r2 += 1
      41:	7b 21 00 00 00 00 00 00	*(u64 *)(r1 + 0) = r2

0000000000000150 <LBB0_10>:
      42:	95 00 00 00 00 00 00 00	exit
